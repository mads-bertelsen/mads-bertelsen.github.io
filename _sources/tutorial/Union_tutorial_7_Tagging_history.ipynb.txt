{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Union tagging system\n",
    "The *Union_master* is capable of recording histories for each neutron in a tree like fashion and add the total intensities for each unique history together. At the end of the simulation these are sorted by intensity and written to file, and the top 20 are shown in the terminal. This system does not work with MPI, if MPI is used only part of the data is written to disk. The system can take up a large amount of memory when used, so it is disabled per default.\n",
    "\n",
    "First we set up a simple instrument with sample, container and a layer of cryostat."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from mcstasscript.interface import instr, functions, plotter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "instrument = instr.McStas_instr(\"python_tutorial\", input_path=\"run_folder\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "Al_inc = instrument.add_component(\"Al_inc\", \"Incoherent_process\")\n",
    "Al_inc.sigma = 0.0082\n",
    "Al_inc.unit_cell_volume = 66.4\n",
    "\n",
    "Al_pow = instrument.add_component(\"Al_pow\", \"Powder_process\")\n",
    "Al_pow.reflections = '\"Al.laz\"'\n",
    "\n",
    "Al = instrument.add_component(\"Al\", \"Union_make_material\")\n",
    "Al.process_string = '\"Al_inc,Al_pow\"'\n",
    "Al.my_absorption = 100*0.231/66.4 # barns [m^2 E-28] * Ã…^3 [m^3 E-30] = [m E-2], correct with factor 100.\n",
    "\n",
    "Sample_inc = instrument.add_component(\"Sample_inc\", \"Incoherent_process\")\n",
    "Sample_inc.sigma = 3.4176\n",
    "Sample_inc.unit_cell_volume = 1079.1\n",
    "\n",
    "Sample_pow = instrument.add_component(\"Sample_pow\", \"Powder_process\")\n",
    "Sample_pow.reflections = '\"Na2Ca3Al2F14.laz\"'\n",
    "\n",
    "Sample = instrument.add_component(\"Sample\", \"Union_make_material\")\n",
    "Sample.process_string = '\"Sample_inc,Sample_pow\"'\n",
    "Sample.my_absorption = 100*2.9464/1079.1\n",
    "\n",
    "src = instrument.add_component(\"source\", \"Source_div\")\n",
    "src.xwidth = 0.01\n",
    "src.yheight = 0.035\n",
    "src.focus_aw = 0.01\n",
    "src.focus_ah = 0.01\n",
    "src.lambda0 = instrument.add_parameter(\"wavelength\", value=5.0, comment=\"Wavelength in [Ang]\")\n",
    "src.dlambda = \"0.01*wavelength\"\n",
    "src.flux = 1E13\n",
    "\n",
    "sample_geometry = instrument.add_component(\"sample_geometry\", \"Union_cylinder\")\n",
    "sample_geometry.yheight = 0.03\n",
    "sample_geometry.radius = 0.0075\n",
    "sample_geometry.material_string='\"Sample\"' \n",
    "sample_geometry.priority = 100\n",
    "sample_geometry.set_AT([0,0,1], RELATIVE=src)\n",
    "\n",
    "container = instrument.add_component(\"sample_container\", \"Union_cylinder\", RELATIVE=sample_geometry)\n",
    "container.yheight = 0.03+0.003 # 1.5 mm top and button\n",
    "container.radius = 0.0075 + 0.0015 # 1.5 mm sides of container\n",
    "container.material_string='\"Al\"' \n",
    "container.priority = 99\n",
    "\n",
    "inner_wall = instrument.add_component(\"cryostat_wall\", \"Union_cylinder\")\n",
    "inner_wall.set_AT([0,0,0], RELATIVE=sample_geometry)\n",
    "inner_wall.yheight = 0.12\n",
    "inner_wall.radius = 0.03\n",
    "inner_wall.material_string='\"Al\"' \n",
    "inner_wall.priority = 80\n",
    "\n",
    "inner_wall_vac = instrument.add_component(\"cryostat_wall_vacuum\", \"Union_cylinder\")\n",
    "inner_wall_vac.set_AT([0,0,0], RELATIVE=sample_geometry)\n",
    "inner_wall_vac.yheight = 0.12 - 0.008\n",
    "inner_wall_vac.radius = 0.03 - 0.002\n",
    "inner_wall_vac.material_string='\"Vacuum\"' \n",
    "inner_wall_vac.priority = 81\n",
    "\n",
    "logger_zx = instrument.add_component(\"logger_space_zx\", \"Union_logger_2D_space\", RELATIVE=sample_geometry)\n",
    "logger_zx.D_direction_1 = '\"z\"'\n",
    "logger_zx.D1_min = -0.04\n",
    "logger_zx.D1_max = 0.04\n",
    "logger_zx.n1 = 300\n",
    "logger_zx.D_direction_2 = '\"x\"'\n",
    "logger_zx.D2_min = -0.04\n",
    "logger_zx.D2_max = 0.04\n",
    "logger_zx.n2 = 300\n",
    "logger_zx.filename = '\"logger_zx.dat\"'\n",
    "\n",
    "logger_zy = instrument.add_component(\"logger_space_zy\", \"Union_logger_2D_space\", RELATIVE=sample_geometry)\n",
    "logger_zy.D_direction_1 = '\"z\"'\n",
    "logger_zy.D1_min = -0.04\n",
    "logger_zy.D1_max = 0.04\n",
    "logger_zy.n1 = 300\n",
    "logger_zy.D_direction_2 = '\"y\"'\n",
    "logger_zy.D2_min = -0.06\n",
    "logger_zy.D2_max = 0.06\n",
    "logger_zy.n2 = 300\n",
    "logger_zy.filename = '\"logger_zy.dat\"'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Adding the Union_master with tagging\n",
    "There are two important parameters to consider when setting a *Union_master* up for tagging:\n",
    "- enable_tagging [default 0] 0 for disable, 1 for enable\n",
    "- history_limit [default 300000] Limit of unique histories recorded\n",
    "\n",
    "As the *Union_master* component records each ray in succession, their unique history is added to the history tree. If a ray takes the same path in the tree, the intensity gets added to that unique history. When the history limit is reached, the tree is not built out further, but if already recorded histories occur, their intensity is still added to the existing tree."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "master = instrument.add_component(\"master\", \"Union_master\")\n",
    "master.enable_tagging = 1\n",
    "master.history_limit = 300000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "tags": [
     "scroll-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO: Using directory: \"/Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/data_folder/union_tagging_3\"\n",
      "INFO: Regenerating c-file: python_tutorial.c\n",
      "CFLAGS= -I@MCCODE_LIB@/share/\n",
      "INFO: Recompiling: ./python_tutorial.out\n",
      "mccode-r.c:2837:3: warning: expression result unused [-Wunused-value]\n",
      "  *t0;\n",
      "  ^~~\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1604:105: warning: incompatible pointer types passing 'int (const struct saved_history_struct *, const struct saved_history_struct *)' to parameter of type 'int (* _Nonnull)(const void *, const void *)' [-Wincompatible-pointer-types]\n",
      "  qsort(total_history.saved_histories,total_history.used_elements,sizeof (struct saved_history_struct), Sample_compare_history_intensities);\n",
      "                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/stdlib.h:161:22: note: passing argument to parameter '__compar' here\n",
      "            int (* _Nonnull __compar)(const void *, const void *));\n",
      "                            ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1613:20: warning: incompatible pointer types passing 'struct saved_history_struct *' to parameter of type 'struct dynamic_history_list *' [-Wincompatible-pointer-types]\n",
      "    printf_history(&total_history.saved_histories[history_iterate]);\n",
      "                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1434:50: note: passing argument to parameter 'history' here\n",
      "void printf_history(struct dynamic_history_list *history) {\n",
      "                                                 ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:2030:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:839:1: warning: non-void function does not return a value in all control paths [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:883:1: warning: non-void function does not return a value [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: warning: format string is not a string literal (potentially insecure) [-Wformat-security]\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^~~~~~~~\n",
      "./python_tutorial.c:12948:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^~~~~~~~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: note: treat the string as an argument to avoid this\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^\n",
      "                                            \"%s\", \n",
      "./python_tutorial.c:12948:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: warning: format string is not a string literal (potentially insecure) [-Wformat-security]\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^~~~~~~~\n",
      "./python_tutorial.c:13191:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zy_filename\n",
      "                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^~~~~~~~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: note: treat the string as an argument to avoid this\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^\n",
      "                                            \"%s\", \n",
      "./python_tutorial.c:13191:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zy_filename\n",
      "                 ^\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:15: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "              ^~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:90: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:789:92: warning: expression result unused [-Wunused-value]\n",
      "              volume_index_main,Volumes[volume_index_main]->geometry.is_masked_volume == 0 ||\n",
      "              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "14 warnings generated.\n",
      "INFO: ===\n",
      "INFO: Placing instr file copy python_tutorial.instr in dataset /Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/data_folder/union_tagging_3\n",
      "\n",
      "    Opening input file '/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//data/Al.laz' (Table_Read_Offset)\n",
      "Table from file 'Al.laz' (block 1) is 26 x 18 (x=1:8), constant step. interpolation: linear\n",
      "  '# TITLE *Aluminum-Al-[FM3-M] Miller, H.P.jr.;DuMond, J.W.M.[1942] at 298 K; ...'\n",
      "PowderN: Al_pow: Reading 26 rows from Al.laz\n",
      "PowderN: Al_pow: Read 26 reflections from file 'Al.laz'\n",
      "PowderN: Al_pow: Vc=66.4 [Angs] sigma_abs=0.924 [barn] sigma_inc=0.0328 [barn] reflections=Al.laz\n",
      "Opening input file '/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//data/Na2Ca3Al2F14.laz' (Table_Read_Offset)\n",
      "Table from file 'Na2Ca3Al2F14.laz' (block 1) is 841 x 18 (x=1:20), constant step. interpolation: linear\n",
      "  '# TITLE *-Na2Ca3Al2F14-[I213] Courbion, G.;Ferey, G.[1988] Standard NAC cal ...'\n",
      "PowderN: Sample_pow: Reading 841 rows from Na2Ca3Al2F14.laz\n",
      "PowderN: Sample_pow: Read 841 reflections from file 'Na2Ca3Al2F14.laz'\n",
      "PowderN: Sample_pow: Vc=1079.1 [Angs] sigma_abs=11.7856 [barn] sigma_inc=13.6704 [barn] reflections=Na2Ca3Al2F14.laz\n",
      "---------------------------------------------------------------------\n",
      "global_process_list.num_elements: 4\n",
      "name of process [0]: Al_inc \n",
      "component index [0]: 1 \n",
      "name of process [1]: Al_pow \n",
      "component index [1]: 2 \n",
      "name of process [2]: Sample_inc \n",
      "component index [2]: 4 \n",
      "name of process [3]: Sample_pow \n",
      "component index [3]: 5 \n",
      "---------------------------------------------------------------------\n",
      "global_material_list.num_elements: 2\n",
      "name of material    [0]: Al \n",
      "component index     [0]: 3 \n",
      "my_absoprtion       [0]: 0.347892 \n",
      "number of processes [0]: 2 \n",
      "name of material    [1]: Sample \n",
      "component index     [1]: 6 \n",
      "my_absoprtion       [1]: 0.273042 \n",
      "number of processes [1]: 2 \n",
      "---------------------------------------------------------------------\n",
      "global_geometry_list.num_elements: 2\n",
      "\n",
      "name of geometry    [0]: sample_geometry \n",
      "component index     [0]: 8 \n",
      "Volume.name         [0]: sample_geometry \n",
      "Volume.p_physics.is_vacuum           [0]: 0 \n",
      "Volume.p_physics.my_absorption       [0]: 0.273042 \n",
      "Volume.p_physics.number of processes [0]: 2 \n",
      "Volume.geometry.shape                [0]: cylinder \n",
      "Volume.geometry.center.x             [0]: 0.000000 \n",
      "Volume.geometry.center.y             [0]: 0.000000 \n",
      "Volume.geometry.center.z             [0]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [0]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [0]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [0]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [0]: 0.007500 \n",
      "Volume.geometry.geometry_parameters.height [0]: 0.030000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [0]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [1]: sample_container \n",
      "component index     [1]: 9 \n",
      "Volume.name         [1]: sample_container \n",
      "Volume.p_physics.is_vacuum           [1]: 0 \n",
      "Volume.p_physics.my_absorption       [1]: 0.347892 \n",
      "Volume.p_physics.number of processes [1]: 2 \n",
      "Volume.geometry.shape                [1]: cylinder \n",
      "Volume.geometry.center.x             [1]: 0.000000 \n",
      "Volume.geometry.center.y             [1]: 0.000000 \n",
      "Volume.geometry.center.z             [1]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [1]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [1]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [1]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [1]: 0.009000 \n",
      "Volume.geometry.geometry_parameters.height [1]: 0.033000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [1]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [2]: cryostat_wall \n",
      "component index     [2]: 10 \n",
      "Volume.name         [2]: cryostat_wall \n",
      "Volume.p_physics.is_vacuum           [2]: 0 \n",
      "Volume.p_physics.my_absorption       [2]: 0.347892 \n",
      "Volume.p_physics.number of processes [2]: 2 \n",
      "Volume.geometry.shape                [2]: cylinder \n",
      "Volume.geometry.center.x             [2]: 0.000000 \n",
      "Volume.geometry.center.y             [2]: 0.000000 \n",
      "Volume.geometry.center.z             [2]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [2]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [2]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [2]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [2]: 0.030000 \n",
      "Volume.geometry.geometry_parameters.height [2]: 0.120000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [2]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [3]: cryostat_wall_vacuum \n",
      "component index     [3]: 11 \n",
      "Volume.name         [3]: cryostat_wall_vacuum \n",
      "Volume.p_physics.is_vacuum           [3]: 1 \n",
      "Volume.p_physics.my_absorption       [3]: 0.000000 \n",
      "Volume.p_physics.number of processes [3]: 0 \n",
      "Volume.geometry.shape                [3]: cylinder \n",
      "Volume.geometry.center.x             [3]: 0.000000 \n",
      "Volume.geometry.center.y             [3]: 0.000000 \n",
      "Volume.geometry.center.z             [3]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [3]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [3]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [3]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [3]: 0.028000 \n",
      "Volume.geometry.geometry_parameters.height [3]: 0.112000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [3]: [0.000000 0.000000 1.000000] \n",
      "---------------------------------------------------------------------\n",
      "number_of_volumes = 5\n",
      "number_of_masks = 0\n",
      "number_of_masked_volumes = 0\n",
      "\n",
      " ---- Overview of the lists generated for each volume ---- \n",
      "List overview for surrounding vacuum\n",
      "LIST: Children for Volume                  0 = [1,2,3,4]\n",
      "LIST: Direct_children for Volume           0 = [3]\n",
      "LIST: Intersect_check_list for Volume      0 = [3]\n",
      "LIST: Mask_intersect_list for Volume       0 = []\n",
      "LIST: Destinations_list for Volume         0 = []\n",
      "LIST: Reduced_destinations_list for Volume 0 = []\n",
      "LIST: Next_volume_list for Volume          0 = [3]\n",
      "LIST: mask_list for Volume                 0 = []\n",
      "LIST: masked_by_list for Volume            0 = []\n",
      "LIST: masked_by_mask_index_list for Volume 0 = []\n",
      "      mask_mode for Volume                 0 = 0\n",
      "\n",
      "List overview for sample_geometry with cylinder shape made of Sample\n",
      "LIST: Children for Volume                  1 = []\n",
      "LIST: Direct_children for Volume           1 = []\n",
      "LIST: Intersect_check_list for Volume      1 = []\n",
      "LIST: Mask_intersect_list for Volume       1 = []\n",
      "LIST: Destinations_list for Volume         1 = [2]\n",
      "LIST: Reduced_destinations_list for Volume 1 = [2]\n",
      "LIST: Next_volume_list for Volume          1 = [2]\n",
      "      Is_vacuum for Volume                 1 = 0\n",
      "      is_mask_volume for Volume            1 = 0\n",
      "      is_masked_volume for Volume          1 = 0\n",
      "      is_exit_volume for Volume            1 = 0\n",
      "LIST: mask_list for Volume                 1 = []\n",
      "LIST: masked_by_list for Volume            1 = []\n",
      "LIST: masked_by_mask_index_list for Volume 1 = []\n",
      "      mask_mode for Volume                 1 = 0\n",
      "\n",
      "List overview for sample_container with cylinder shape made of Al\n",
      "LIST: Children for Volume                  2 = [1]\n",
      "LIST: Direct_children for Volume           2 = [1]\n",
      "LIST: Intersect_check_list for Volume      2 = [1]\n",
      "LIST: Mask_intersect_list for Volume       2 = []\n",
      "LIST: Destinations_list for Volume         2 = [4]\n",
      "LIST: Reduced_destinations_list for Volume 2 = [4]\n",
      "LIST: Next_volume_list for Volume          2 = [4,1]\n",
      "      Is_vacuum for Volume                 2 = 0\n",
      "      is_mask_volume for Volume            2 = 0\n",
      "      is_masked_volume for Volume          2 = 0\n",
      "      is_exit_volume for Volume            2 = 0\n",
      "LIST: mask_list for Volume                 2 = []\n",
      "LIST: masked_by_list for Volume            2 = []\n",
      "LIST: masked_by_mask_index_list for Volume 2 = []\n",
      "      mask_mode for Volume                 2 = 0\n",
      "\n",
      "List overview for cryostat_wall with cylinder shape made of Al\n",
      "LIST: Children for Volume                  3 = [1,2,4]\n",
      "LIST: Direct_children for Volume           3 = [4]\n",
      "LIST: Intersect_check_list for Volume      3 = [4]\n",
      "LIST: Mask_intersect_list for Volume       3 = []\n",
      "LIST: Destinations_list for Volume         3 = [0]\n",
      "LIST: Reduced_destinations_list for Volume 3 = []\n",
      "LIST: Next_volume_list for Volume          3 = [0,4]\n",
      "      Is_vacuum for Volume                 3 = 0\n",
      "      is_mask_volume for Volume            3 = 0\n",
      "      is_masked_volume for Volume          3 = 0\n",
      "      is_exit_volume for Volume            3 = 0\n",
      "LIST: mask_list for Volume                 3 = []\n",
      "LIST: masked_by_list for Volume            3 = []\n",
      "LIST: masked_by_mask_index_list for Volume 3 = []\n",
      "      mask_mode for Volume                 3 = 0\n",
      "\n",
      "List overview for cryostat_wall_vacuum with cylinder shape made of Vacuum\n",
      "LIST: Children for Volume                  4 = [1,2]\n",
      "LIST: Direct_children for Volume           4 = [2]\n",
      "LIST: Intersect_check_list for Volume      4 = [2]\n",
      "LIST: Mask_intersect_list for Volume       4 = []\n",
      "LIST: Destinations_list for Volume         4 = [3]\n",
      "LIST: Reduced_destinations_list for Volume 4 = [3]\n",
      "LIST: Next_volume_list for Volume          4 = [3,2]\n",
      "      Is_vacuum for Volume                 4 = 1\n",
      "      is_mask_volume for Volume            4 = 0\n",
      "      is_masked_volume for Volume          4 = 0\n",
      "      is_exit_volume for Volume            4 = 0\n",
      "LIST: mask_list for Volume                 4 = []\n",
      "LIST: masked_by_list for Volume            4 = []\n",
      "LIST: masked_by_mask_index_list for Volume 4 = []\n",
      "      mask_mode for Volume                 4 = 0\n",
      "\n",
      "Union_master component master initialized sucessfully\n",
      "Detector: logger_space_zx_I=18017.8 logger_space_zx_ERR=32.4189 logger_space_zx_N=879822 \"logger_zx.dat\"\n",
      "Detector: logger_space_zy_I=18017.8 logger_space_zy_ERR=32.4189 logger_space_zy_N=879822 \"logger_zy.dat\"\n",
      "\n",
      "\n",
      "Top 20 most common histories. Shows the index of volumes entered (VX), and the scattering processes (PX)\n",
      "1859607\t N I=3.965281E+04 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "506763\t N I=1.050335E+04 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "226314\t N I=4.825743E+03 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "166837\t N I=3.557502E+03 \t V0 -> V3 -> V4 -> V3 -> V0 \n",
      "70469\t N I=1.466246E+03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "31797\t N I=5.940376E+02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "23495\t N I=4.091492E+02 \t V0 -> V3 -> P1 -> V0 \n",
      "17274\t N I=3.516535E+02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "13839\t N I=2.758026E+02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "11994\t N I=2.441687E+02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "9842\t N I=2.293453E+02 \t V0 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "10180\t N I=2.028735E+02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "8250\t N I=1.719896E+02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "5405\t N I=1.056087E+02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "4597\t N I=8.898223E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "3735\t N I=5.656959E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "2454\t N I=4.841669E+01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2882\t N I=4.699149E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "2334\t N I=4.194865E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "2056\t N I=4.159660E+01 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "loading system configuration\n",
      "\n"
     ]
    }
   ],
   "source": [
    "instrument.set_parameters(wavelength=3.0)\n",
    "instrument.settings(ncount=3E5, output_path=\"data_folder/union_tagging\")\n",
    "\n",
    "instrument.backengine()\n",
    "data = instrument.data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting data with name logger_space_zx\n",
      "Plotting data with name logger_space_zy\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 936x504 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "functions.name_plot_options(\"logger_space_zx\", data, log=True, orders_of_mag=4)\n",
    "functions.name_plot_options(\"logger_space_zy\", data, log=True, orders_of_mag=4)\n",
    "plotter.make_sub_plot(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Finding the history file\n",
    "A file called Union_history.dat is written in the run folder with all the unique histories. In some cases a bug happens that causes the file to be unreadable, for now the best fix is to rerun the simulation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "History file written by the McStas component Union_master \n",
      "When running with MPI, the results may be from just a single thread, meaning intensities are divided by number of threads\n",
      "----- Description of the used volumes -----------------------------------------------------------------------------------\n",
      "V0: Surrounding vacuum \n",
      "V1: sample_geometry  Material: Sample   P0:  P1: Sample_pow\n",
      "V2: sample_container  Material: Al   P0: 4 P1: Al_pow\n",
      "V3: cryostat_wall  Material: Al   P0: 4 P1: Al_pow\n",
      "V4: cryostat_wall_vacuum  Material: Vacuum  \n",
      "----- Histories sorted after intensity ----------------------------------------------------------------------------------\n",
      "1859607\t N I=3.965281E+04 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "506763\t N I=1.050335E+04 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "226314\t N I=4.825743E+03 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "166837\t N I=3.557502E+03 \t V0 -> V3 -> V4 -> V3 -> V0 \n",
      "70469\t N I=1.466246E+03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "31797\t N I=5.940376E+02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "23495\t N I=4.091492E+02 \t V0 -> V3 -> P1 -> V0 \n",
      "17274\t N I=3.516535E+02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "13839\t N I=2.758026E+02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "11994\t N I=2.441687E+02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "9842\t N I=2.293453E+02 \t V0 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "10180\t N I=2.028735E+02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "8250\t N I=1.719896E+02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "5405\t N I=1.056087E+02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "4597\t N I=8.898223E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "3735\t N I=5.656959E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "2454\t N I=4.841669E+01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2882\t N I=4.699149E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "2334\t N I=4.194865E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "2056\t N I=4.159660E+01 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1531\t N I=3.104778E+01 \t V0 -> V3 -> V4 -> V3 -> P1 -> V0 \n",
      "1529\t N I=2.937892E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1605\t N I=2.843064E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1094\t N I=2.371972E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "1056\t N I=2.251227E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "927\t N I=1.618954E+01 \t V0 -> V3 -> P1 -> P1 -> V0 \n",
      "750\t N I=1.509174E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "623\t N I=1.063780E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "559\t N I=1.026990E+01 \t V0 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "556\t N I=9.481044E+00 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "589\t N I=9.135234E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "298\t N I=6.872061E+00 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "388\t N I=6.792255E+00 \t V0 -> V3 -> V4 -> V2 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "434\t N I=6.645396E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "435\t N I=6.588350E+00 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "273\t N I=5.790274E+00 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "366\t N I=5.672326E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "285\t N I=5.647409E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "352\t N I=5.331544E+00 \t V0 -> V3 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "265\t N I=4.655556E+00 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "267\t N I=4.518687E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "186\t N I=3.656094E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "281\t N I=3.513630E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "182\t N I=3.302548E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "160\t N I=3.112205E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "163\t N I=3.046436E+00 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "144\t N I=3.000987E+00 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "163\t N I=2.972572E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "211\t N I=2.805841E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "183\t N I=2.789270E+00 \t V0 -> V3 -> V4 -> V2 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "113\t N I=2.753453E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "175\t N I=2.589555E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "134\t N I=2.491092E+00 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "137\t N I=2.457782E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "103\t N I=2.004625E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "115\t N I=1.942657E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "97\t N I=1.776228E+00 \t V0 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "84\t N I=1.619118E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "85\t N I=1.601890E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "25\t N I=1.378346E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "98\t N I=1.373456E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "95\t N I=1.349907E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "69\t N I=1.326884E+00 \t V0 -> V3 -> V4 -> V2 -> P0 -> V4 -> V3 -> V0 \n",
      "78\t N I=1.312686E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "40\t N I=1.202410E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "72\t N I=1.113576E+00 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "38\t N I=1.054350E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "57\t N I=9.793343E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "64\t N I=9.571626E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "57\t N I=9.514756E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "63\t N I=9.241653E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "48\t N I=9.188580E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "44\t N I=9.071488E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "37\t N I=8.697112E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "53\t N I=8.477626E-01 \t V0 -> V3 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "41\t N I=8.158051E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "60\t N I=8.021806E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "52\t N I=7.809131E-01 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "40\t N I=7.692616E-01 \t V0 -> V3 -> V4 -> V2 -> P0 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "53\t N I=7.261881E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "42\t N I=7.178343E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "36\t N I=6.980954E-01 \t V0 -> V3 -> P1 -> P1 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "29\t N I=6.689273E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "34\t N I=6.539172E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P0 -> V0 \n",
      "34\t N I=6.538197E-01 \t V0 -> V3 -> P0 -> V0 \n",
      "42\t N I=6.024936E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "35\t N I=5.834859E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "36\t N I=5.775684E-01 \t V0 -> V3 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "48\t N I=5.733596E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "30\t N I=5.577867E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "39\t N I=5.534476E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "60\t N I=5.273567E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "29\t N I=4.431660E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "22\t N I=4.231337E-01 \t V0 -> V3 -> P0 -> V4 -> V3 -> V0 \n",
      "25\t N I=4.180681E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "20\t N I=4.001083E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "15\t N I=3.996063E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "21\t N I=3.907685E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "9\t N I=3.873613E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "19\t N I=3.872826E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "35\t N I=3.741849E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "19\t N I=3.653692E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P0 -> V4 -> V3 -> V0 \n",
      "10\t N I=3.577379E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "27\t N I=3.383308E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.171137E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "19\t N I=2.898560E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "8\t N I=2.891570E-01 \t V0 -> V3 -> V4 -> V2 -> P0 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "17\t N I=2.822871E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P0 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "20\t N I=2.790372E-01 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "8\t N I=2.645994E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "22\t N I=2.587804E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "17\t N I=2.515664E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "13\t N I=2.500189E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P0 -> V4 -> V3 -> V0 \n",
      "2\t N I=2.410002E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "16\t N I=2.356043E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "12\t N I=2.307864E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P0 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "19\t N I=2.306564E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "5\t N I=2.259507E-01 \t V0 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "19\t N I=2.122730E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "11\t N I=2.028933E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "13\t N I=2.024403E-01 \t V0 -> V3 -> P1 -> P1 -> P1 -> V0 \n",
      "13\t N I=2.008074E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P0 -> V4 -> V3 -> V0 \n",
      "19\t N I=1.999939E-01 \t V0 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "15\t N I=1.997969E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "9\t N I=1.826944E-01 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "2\t N I=1.791654E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "19\t N I=1.772469E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "17\t N I=1.688696E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "20\t N I=1.670351E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "15\t N I=1.626160E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "11\t N I=1.559772E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "13\t N I=1.500194E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "10\t N I=1.424290E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "9\t N I=1.375370E-01 \t V0 -> V3 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "11\t N I=1.361135E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> P1 -> V0 \n",
      "8\t N I=1.350152E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "7\t N I=1.336463E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "8\t N I=1.285106E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "3\t N I=1.221980E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "10\t N I=1.210789E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "5\t N I=1.201056E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "9\t N I=1.200436E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "3\t N I=1.182892E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "7\t N I=1.175995E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "9\t N I=1.142555E-01 \t V0 -> V3 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "6\t N I=1.083372E-01 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "5\t N I=1.079352E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "4\t N I=1.064247E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P0 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "7\t N I=1.036886E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "10\t N I=1.017997E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "4\t N I=1.017446E-01 \t V0 -> V3 -> P1 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "7\t N I=1.014091E-01 \t V0 -> V3 -> P1 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "10\t N I=9.965093E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "6\t N I=9.662395E-02 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "8\t N I=9.191802E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "7\t N I=9.091205E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "4\t N I=8.802686E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "5\t N I=8.753136E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "4\t N I=8.713988E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "7\t N I=8.673562E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "6\t N I=8.473219E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "5\t N I=8.459402E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P0 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "7\t N I=8.453155E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "5\t N I=8.202485E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "7\t N I=8.179178E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "5\t N I=8.008056E-02 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "6\t N I=7.787455E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "4\t N I=7.691362E-02 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P0 -> V0 \n",
      "6\t N I=7.687598E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "3\t N I=7.361250E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "6\t N I=7.285952E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "8\t N I=7.219209E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=7.037750E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P0 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "6\t N I=7.035304E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "20\t N I=6.930433E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "5\t N I=6.736602E-02 \t V0 -> V3 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=6.721552E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "9\t N I=6.695282E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P0 -> V0 \n",
      "6\t N I=6.648583E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "5\t N I=6.543821E-02 \t V0 -> V3 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "5\t N I=6.229937E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "4\t N I=5.973815E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "4\t N I=5.969631E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=5.951830E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "5\t N I=5.841225E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "6\t N I=5.788928E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "3\t N I=5.768873E-02 \t V0 -> V3 -> P0 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "3\t N I=5.767973E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P0 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "3\t N I=5.764591E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "2\t N I=5.744261E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "6\t N I=5.505677E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "4\t N I=5.463461E-02 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "3\t N I=5.433915E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "6\t N I=5.383604E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "3\t N I=5.197286E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "4\t N I=4.987311E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "3\t N I=4.856827E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "3\t N I=4.831851E-02 \t V0 -> V3 -> P1 -> P0 -> V0 \n",
      "2\t N I=4.609026E-02 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "2\t N I=4.605094E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "4\t N I=4.514625E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "6\t N I=4.274886E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "4\t N I=4.227548E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "2\t N I=4.209610E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P0 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "2\t N I=4.207892E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "5\t N I=4.207512E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=4.205341E-02 \t V0 -> V3 -> P1 -> P0 -> V4 -> V3 -> V0 \n",
      "1\t N I=4.200370E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "3\t N I=4.167133E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "3\t N I=4.160331E-02 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> P1 -> P1 -> V0 \n",
      "3\t N I=4.157004E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=4.111478E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "7\t N I=4.002838E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.845955E-02 \t V0 -> V3 -> V4 -> V3 -> P0 -> V0 \n",
      "2\t N I=3.844839E-02 \t V0 -> V3 -> V4 -> V3 -> P0 -> V4 -> V3 -> V0 \n",
      "3\t N I=3.799710E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.771217E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "2\t N I=3.767373E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P0 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.632067E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P0 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.623438E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.619957E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "2\t N I=3.553759E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "3\t N I=3.532011E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "2\t N I=3.448112E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "3\t N I=3.315148E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P0 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "3\t N I=3.309992E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.276986E-02 \t V0 -> V3 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.269722E-02 \t V0 -> V3 -> P1 -> P1 -> P1 -> P1 -> V0 \n",
      "2\t N I=3.240473E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P0 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "9\t N I=3.154916E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "3\t N I=3.119187E-02 \t V0 -> V3 -> P1 -> P1 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "4\t N I=3.025105E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P0 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.002264E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> P1 -> P0 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.825316E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=2.823280E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=2.815913E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> P1 -> P1 -> V0 \n",
      "1\t N I=2.789046E-02 \t V0 -> V3 -> P1 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.788551E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "4\t N I=2.644613E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "2\t N I=2.618939E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "4\t N I=2.600572E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.559786E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.545367E-02 \t V0 -> V3 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.503821E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.436294E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "3\t N I=2.362027E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "2\t N I=2.353812E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "4\t N I=2.332097E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=2.272885E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P0 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=2.260732E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.229209E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P0 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "3\t N I=2.226424E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.177959E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P0 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=2.173728E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "4\t N I=2.137424E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.134416E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> P0 -> V0 \n",
      "2\t N I=2.124210E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P0 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=2.114286E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "1\t N I=2.106589E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P0 -> V0 \n",
      "1\t N I=2.105620E-02 \t V0 -> V3 -> V4 -> V2 -> P0 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.105417E-02 \t V0 -> V3 -> P0 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.102680E-02 \t V0 -> V3 -> V4 -> V2 -> P0 -> P1 -> V4 -> V3 -> V0 \n",
      "3\t N I=2.101774E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.101559E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P0 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.099840E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P0 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.099810E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.099241E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P0 -> V4 -> V3 -> V0 \n",
      "3\t N I=2.073353E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> P1 -> V0 \n",
      "4\t N I=2.016148E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.008879E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "3\t N I=1.989747E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.986359E-02 \t V0 -> V3 -> P1 -> P1 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "2\t N I=1.942461E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.923702E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P0 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.922269E-02 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P0 -> V4 -> V3 -> V0 \n",
      "5\t N I=1.834890E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.814081E-02 \t V0 -> V3 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.813887E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.813885E-02 \t V0 -> V3 -> P1 -> P1 -> P1 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.812308E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.812027E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "1\t N I=1.810402E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.808167E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.807547E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.807263E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "2\t N I=1.739841E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "5\t N I=1.714379E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P0 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.621517E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.618113E-02 \t V0 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.617426E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.616066E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.611050E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.609214E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.527837E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.388429E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P0 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.377018E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.367051E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P0 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.365858E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P0 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.365367E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P0 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.365050E-02 \t V0 -> V3 -> V4 -> V2 -> P0 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.364029E-02 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> P0 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.363490E-02 \t V0 -> V3 -> P0 -> P1 -> V0 \n",
      "1\t N I=1.302289E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.299298E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.289116E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.289094E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.286992E-02 \t V0 -> V3 -> P1 -> P1 -> P1 -> V4 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.283121E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.271447E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.242743E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.202185E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.193356E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.192701E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "2\t N I=1.180068E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.179451E-02 \t V0 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.178828E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.177854E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.177829E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.176821E-02 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.176692E-02 \t V0 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.176084E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.175595E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.175161E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.174237E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.174026E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.077195E-02 \t V0 -> V3 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.050128E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P0 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.049533E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.047453E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "2\t N I=9.194804E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=8.828024E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> P0 -> V4 -> V3 -> V0 \n",
      "1\t N I=8.616066E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=8.382155E-03 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=8.360062E-03 \t V0 -> V3 -> V4 -> V2 -> P1 -> V4 -> V3 -> P1 -> P1 -> P1 -> V0 \n",
      "1\t N I=7.974062E-03 \t V0 -> V3 -> V4 -> V2 -> V4 -> V3 -> P0 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=7.660077E-03 \t V0 -> V3 -> V4 -> V3 -> P1 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=7.647885E-03 \t V0 -> V3 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "5\t N I=7.331964E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=7.128787E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=6.530489E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> P1 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "2\t N I=6.369831E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "1\t N I=6.350997E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> P1 -> P1 -> P1 -> V0 \n",
      "1\t N I=5.952547E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "1\t N I=5.855741E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=5.839953E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> P1 -> P1 -> V0 \n",
      "1\t N I=5.634308E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "6\t N I=5.502077E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=5.452432E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P0 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=5.319210E-03 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> P1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=4.920947E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=4.135698E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=4.100827E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.945110E-03 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P0 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "3\t N I=3.705516E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.669367E-03 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.648249E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.477421E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "2\t N I=2.474695E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P0 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=2.304728E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.255269E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.011449E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P0 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.869764E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.847745E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P0 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.528149E-03 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.056831E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P0 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=9.166647E-04 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "4\t N I=7.810965E-04 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=5.888911E-04 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=4.802447E-04 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=4.204479E-04 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.772470E-04 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.676614E-04 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.357966E-04 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "1\t N I=9.527289E-05 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=9.238563E-05 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "1\t N I=9.057649E-05 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V1 -> P0 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=8.667397E-05 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V1 -> V2 -> P1 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=4.666257E-05 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P0 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=4.519254E-05 \t V0 -> V3 -> V4 -> V2 -> P0 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.945415E-05 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=3.325231E-05 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P0 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.066219E-05 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.534252E-05 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P0 -> V0 \n",
      "1\t N I=1.606027E-05 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=9.518509E-06 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=5.475630E-06 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P1 -> P1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=5.457173E-06 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=4.436696E-06 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P1 -> V2 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.717751E-06 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> V2 -> P1 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.038084E-30 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> P1 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.945785E-50 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> P1 -> P1 -> P1 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "with open(\"run_folder/Union_history.dat\") as file:\n",
    "    instrument_string = file.read()\n",
    "    print(instrument_string)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Interpreting the histories\n",
    "The history with highest intensity in my run is: V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> V0, which means:\n",
    "- Neutron entered Volume0 (Surrounding vacuum)\n",
    "- Neutron entered Volume3 (Cryostat wall)\n",
    "- Neutron entered Volume4 (Cryostat vacuum)\n",
    "- Neutron entered Volume2 (Container)\n",
    "- Neutron entered Volume1 (Sample)\n",
    "- Neutron entered Volume2 (Container)\n",
    "- Neutron entered Volume4 (Cryostat vacuum)\n",
    "- Neutron entered Volume3 (Cryostat wall)\n",
    "- Neutron entered Volume0 (Surrounding vacuum)\n",
    "\n",
    "So the most likely occurrence is that the ray is propagated through all geometries. The next most likely history is:\n",
    "\n",
    "V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0\n",
    "\n",
    "- Neutron entered Volume0 (Surrounding vacuum)\n",
    "- Neutron entered Volume3 (Cryostat wall)\n",
    "- Neutron entered Volume4 (Cryostat vacuum)\n",
    "- Neutron entered Volume2 (Container)\n",
    "- Neutron entered Volume1 (Sample)\n",
    "- Neutron scattered on Process1 (Since we are in Volume1, that would be Sample_pow)\n",
    "- Neutron entered Volume2 (Container)\n",
    "- Neutron entered Volume4 (Cryostat vacuum)\n",
    "- Neutron entered Volume3 (Cryostat wall)\n",
    "- Neutron entered Volume0 (Surrounding vacuum)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Use conditional component to filter tagging\n",
    "Just like a logger can be modified by a conditional component to only record events that satisfy that condition, the tagging system of the *Union_master* component can also be modified by a conditional component. In that case, the tagging system will only record events that satisfy the condition imposed by the conditional component.\n",
    "\n",
    "This can be useful to explain an unexpected feature, as the conditional components can filter for energy, time, direction or any combination of these. Here we demonstrate this feature by adding a *Union_conditional_PSD* outside of the direct beam and enabling the *master_tagging* control parameter, which causes the condition to be applied to the tagging system."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set up an arm pointing to the relevant spot\n",
    "spot_dir = instrument.add_component(\"spot_dir\", \"Arm\", RELATIVE=sample_geometry, before=\"master\")\n",
    "spot_dir.set_ROTATED([0, 60, 0], RELATIVE=sample_geometry)\n",
    "\n",
    "# Set up a conditional component targeting all our loggers\n",
    "PSD_conditional = instrument.add_component(\"space_all_PSD_conditional\", \"Union_conditional_PSD\", before=\"master\")\n",
    "PSD_conditional.xwidth = 0.2\n",
    "PSD_conditional.yheight = 0.2\n",
    "PSD_conditional.master_tagging = 1\n",
    "PSD_conditional.set_AT([0, 0, 0.5], RELATIVE=spot_dir) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "tags": [
     "scroll-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO: Using directory: \"/Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/data_folder/union_tagging_4\"\n",
      "INFO: Regenerating c-file: python_tutorial.c\n",
      "CFLAGS= -I@MCCODE_LIB@/share/\n",
      "INFO: Recompiling: ./python_tutorial.out\n",
      "mccode-r.c:2837:3: warning: expression result unused [-Wunused-value]\n",
      "  *t0;\n",
      "  ^~~\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1604:105: warning: incompatible pointer types passing 'int (const struct saved_history_struct *, const struct saved_history_struct *)' to parameter of type 'int (* _Nonnull)(const void *, const void *)' [-Wincompatible-pointer-types]\n",
      "  qsort(total_history.saved_histories,total_history.used_elements,sizeof (struct saved_history_struct), Sample_compare_history_intensities);\n",
      "                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/stdlib.h:161:22: note: passing argument to parameter '__compar' here\n",
      "            int (* _Nonnull __compar)(const void *, const void *));\n",
      "                            ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1613:20: warning: incompatible pointer types passing 'struct saved_history_struct *' to parameter of type 'struct dynamic_history_list *' [-Wincompatible-pointer-types]\n",
      "    printf_history(&total_history.saved_histories[history_iterate]);\n",
      "                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1434:50: note: passing argument to parameter 'history' here\n",
      "void printf_history(struct dynamic_history_list *history) {\n",
      "                                                 ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:2030:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:839:1: warning: non-void function does not return a value in all control paths [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:883:1: warning: non-void function does not return a value [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: warning: format string is not a string literal (potentially insecure) [-Wformat-security]\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^~~~~~~~\n",
      "./python_tutorial.c:13237:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^~~~~~~~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: note: treat the string as an argument to avoid this\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^\n",
      "                                            \"%s\", \n",
      "./python_tutorial.c:13237:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: warning: format string is not a string literal (potentially insecure) [-Wformat-security]\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^~~~~~~~\n",
      "./python_tutorial.c:13480:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zy_filename\n",
      "                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^~~~~~~~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: note: treat the string as an argument to avoid this\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^\n",
      "                                            \"%s\", \n",
      "./python_tutorial.c:13480:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zy_filename\n",
      "                 ^\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:15: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "              ^~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:90: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:789:92: warning: expression result unused [-Wunused-value]\n",
      "              volume_index_main,Volumes[volume_index_main]->geometry.is_masked_volume == 0 ||\n",
      "              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "14 warnings generated.\n",
      "INFO: ===\n",
      "INFO: Placing instr file copy python_tutorial.instr in dataset /Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/data_folder/union_tagging_4\n",
      "\n",
      "    Opening input file '/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//data/Al.laz' (Table_Read_Offset)\n",
      "Table from file 'Al.laz' (block 1) is 26 x 18 (x=1:8), constant step. interpolation: linear\n",
      "  '# TITLE *Aluminum-Al-[FM3-M] Miller, H.P.jr.;DuMond, J.W.M.[1942] at 298 K; ...'\n",
      "PowderN: Al_pow: Reading 26 rows from Al.laz\n",
      "PowderN: Al_pow: Read 26 reflections from file 'Al.laz'\n",
      "PowderN: Al_pow: Vc=66.4 [Angs] sigma_abs=0.924 [barn] sigma_inc=0.0328 [barn] reflections=Al.laz\n",
      "Opening input file '/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//data/Na2Ca3Al2F14.laz' (Table_Read_Offset)\n",
      "Table from file 'Na2Ca3Al2F14.laz' (block 1) is 841 x 18 (x=1:20), constant step. interpolation: linear\n",
      "  '# TITLE *-Na2Ca3Al2F14-[I213] Courbion, G.;Ferey, G.[1988] Standard NAC cal ...'\n",
      "PowderN: Sample_pow: Reading 841 rows from Na2Ca3Al2F14.laz\n",
      "PowderN: Sample_pow: Read 841 reflections from file 'Na2Ca3Al2F14.laz'\n",
      "PowderN: Sample_pow: Vc=1079.1 [Angs] sigma_abs=11.7856 [barn] sigma_inc=13.6704 [barn] reflections=Na2Ca3Al2F14.laz\n",
      "starded conditional initialize \n",
      "---------------------------------------------------------------------\n",
      "global_process_list.num_elements: 4\n",
      "name of process [0]: Al_inc \n",
      "component index [0]: 1 \n",
      "name of process [1]: Al_pow \n",
      "component index [1]: 2 \n",
      "name of process [2]: Sample_inc \n",
      "component index [2]: 4 \n",
      "name of process [3]: Sample_pow \n",
      "component index [3]: 5 \n",
      "---------------------------------------------------------------------\n",
      "global_material_list.num_elements: 2\n",
      "name of material    [0]: Al \n",
      "component index     [0]: 3 \n",
      "my_absoprtion       [0]: 0.347892 \n",
      "number of processes [0]: 2 \n",
      "name of material    [1]: Sample \n",
      "component index     [1]: 6 \n",
      "my_absoprtion       [1]: 0.273042 \n",
      "number of processes [1]: 2 \n",
      "---------------------------------------------------------------------\n",
      "global_geometry_list.num_elements: 2\n",
      "\n",
      "name of geometry    [0]: sample_geometry \n",
      "component index     [0]: 8 \n",
      "Volume.name         [0]: sample_geometry \n",
      "Volume.p_physics.is_vacuum           [0]: 0 \n",
      "Volume.p_physics.my_absorption       [0]: 0.273042 \n",
      "Volume.p_physics.number of processes [0]: 2 \n",
      "Volume.geometry.shape                [0]: cylinder \n",
      "Volume.geometry.center.x             [0]: 0.000000 \n",
      "Volume.geometry.center.y             [0]: 0.000000 \n",
      "Volume.geometry.center.z             [0]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [0]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [0]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [0]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [0]: 0.007500 \n",
      "Volume.geometry.geometry_parameters.height [0]: 0.030000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [0]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [1]: sample_container \n",
      "component index     [1]: 9 \n",
      "Volume.name         [1]: sample_container \n",
      "Volume.p_physics.is_vacuum           [1]: 0 \n",
      "Volume.p_physics.my_absorption       [1]: 0.347892 \n",
      "Volume.p_physics.number of processes [1]: 2 \n",
      "Volume.geometry.shape                [1]: cylinder \n",
      "Volume.geometry.center.x             [1]: 0.000000 \n",
      "Volume.geometry.center.y             [1]: 0.000000 \n",
      "Volume.geometry.center.z             [1]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [1]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [1]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [1]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [1]: 0.009000 \n",
      "Volume.geometry.geometry_parameters.height [1]: 0.033000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [1]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [2]: cryostat_wall \n",
      "component index     [2]: 10 \n",
      "Volume.name         [2]: cryostat_wall \n",
      "Volume.p_physics.is_vacuum           [2]: 0 \n",
      "Volume.p_physics.my_absorption       [2]: 0.347892 \n",
      "Volume.p_physics.number of processes [2]: 2 \n",
      "Volume.geometry.shape                [2]: cylinder \n",
      "Volume.geometry.center.x             [2]: 0.000000 \n",
      "Volume.geometry.center.y             [2]: 0.000000 \n",
      "Volume.geometry.center.z             [2]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [2]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [2]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [2]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [2]: 0.030000 \n",
      "Volume.geometry.geometry_parameters.height [2]: 0.120000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [2]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [3]: cryostat_wall_vacuum \n",
      "component index     [3]: 11 \n",
      "Volume.name         [3]: cryostat_wall_vacuum \n",
      "Volume.p_physics.is_vacuum           [3]: 1 \n",
      "Volume.p_physics.my_absorption       [3]: 0.000000 \n",
      "Volume.p_physics.number of processes [3]: 0 \n",
      "Volume.geometry.shape                [3]: cylinder \n",
      "Volume.geometry.center.x             [3]: 0.000000 \n",
      "Volume.geometry.center.y             [3]: 0.000000 \n",
      "Volume.geometry.center.z             [3]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [3]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [3]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [3]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [3]: 0.028000 \n",
      "Volume.geometry.geometry_parameters.height [3]: 0.112000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [3]: [0.000000 0.000000 1.000000] \n",
      "---------------------------------------------------------------------\n",
      "number_of_volumes = 5\n",
      "number_of_masks = 0\n",
      "number_of_masked_volumes = 0\n",
      "\n",
      " ---- Overview of the lists generated for each volume ---- \n",
      "List overview for surrounding vacuum\n",
      "LIST: Children for Volume                  0 = [1,2,3,4]\n",
      "LIST: Direct_children for Volume           0 = [3]\n",
      "LIST: Intersect_check_list for Volume      0 = [3]\n",
      "LIST: Mask_intersect_list for Volume       0 = []\n",
      "LIST: Destinations_list for Volume         0 = []\n",
      "LIST: Reduced_destinations_list for Volume 0 = []\n",
      "LIST: Next_volume_list for Volume          0 = [3]\n",
      "LIST: mask_list for Volume                 0 = []\n",
      "LIST: masked_by_list for Volume            0 = []\n",
      "LIST: masked_by_mask_index_list for Volume 0 = []\n",
      "      mask_mode for Volume                 0 = 0\n",
      "\n",
      "List overview for sample_geometry with cylinder shape made of Sample\n",
      "LIST: Children for Volume                  1 = []\n",
      "LIST: Direct_children for Volume           1 = []\n",
      "LIST: Intersect_check_list for Volume      1 = []\n",
      "LIST: Mask_intersect_list for Volume       1 = []\n",
      "LIST: Destinations_list for Volume         1 = [2]\n",
      "LIST: Reduced_destinations_list for Volume 1 = [2]\n",
      "LIST: Next_volume_list for Volume          1 = [2]\n",
      "      Is_vacuum for Volume                 1 = 0\n",
      "      is_mask_volume for Volume            1 = 0\n",
      "      is_masked_volume for Volume          1 = 0\n",
      "      is_exit_volume for Volume            1 = 0\n",
      "LIST: mask_list for Volume                 1 = []\n",
      "LIST: masked_by_list for Volume            1 = []\n",
      "LIST: masked_by_mask_index_list for Volume 1 = []\n",
      "      mask_mode for Volume                 1 = 0\n",
      "\n",
      "List overview for sample_container with cylinder shape made of Al\n",
      "LIST: Children for Volume                  2 = [1]\n",
      "LIST: Direct_children for Volume           2 = [1]\n",
      "LIST: Intersect_check_list for Volume      2 = [1]\n",
      "LIST: Mask_intersect_list for Volume       2 = []\n",
      "LIST: Destinations_list for Volume         2 = [4]\n",
      "LIST: Reduced_destinations_list for Volume 2 = [4]\n",
      "LIST: Next_volume_list for Volume          2 = [4,1]\n",
      "      Is_vacuum for Volume                 2 = 0\n",
      "      is_mask_volume for Volume            2 = 0\n",
      "      is_masked_volume for Volume          2 = 0\n",
      "      is_exit_volume for Volume            2 = 0\n",
      "LIST: mask_list for Volume                 2 = []\n",
      "LIST: masked_by_list for Volume            2 = []\n",
      "LIST: masked_by_mask_index_list for Volume 2 = []\n",
      "      mask_mode for Volume                 2 = 0\n",
      "\n",
      "List overview for cryostat_wall with cylinder shape made of Al\n",
      "LIST: Children for Volume                  3 = [1,2,4]\n",
      "LIST: Direct_children for Volume           3 = [4]\n",
      "LIST: Intersect_check_list for Volume      3 = [4]\n",
      "LIST: Mask_intersect_list for Volume       3 = []\n",
      "LIST: Destinations_list for Volume         3 = [0]\n",
      "LIST: Reduced_destinations_list for Volume 3 = []\n",
      "LIST: Next_volume_list for Volume          3 = [0,4]\n",
      "      Is_vacuum for Volume                 3 = 0\n",
      "      is_mask_volume for Volume            3 = 0\n",
      "      is_masked_volume for Volume          3 = 0\n",
      "      is_exit_volume for Volume            3 = 0\n",
      "LIST: mask_list for Volume                 3 = []\n",
      "LIST: masked_by_list for Volume            3 = []\n",
      "LIST: masked_by_mask_index_list for Volume 3 = []\n",
      "      mask_mode for Volume                 3 = 0\n",
      "\n",
      "List overview for cryostat_wall_vacuum with cylinder shape made of Vacuum\n",
      "LIST: Children for Volume                  4 = [1,2]\n",
      "LIST: Direct_children for Volume           4 = [2]\n",
      "LIST: Intersect_check_list for Volume      4 = [2]\n",
      "LIST: Mask_intersect_list for Volume       4 = []\n",
      "LIST: Destinations_list for Volume         4 = [3]\n",
      "LIST: Reduced_destinations_list for Volume 4 = [3]\n",
      "LIST: Next_volume_list for Volume          4 = [3,2]\n",
      "      Is_vacuum for Volume                 4 = 1\n",
      "      is_mask_volume for Volume            4 = 0\n",
      "      is_masked_volume for Volume          4 = 0\n",
      "      is_exit_volume for Volume            4 = 0\n",
      "LIST: mask_list for Volume                 4 = []\n",
      "LIST: masked_by_list for Volume            4 = []\n",
      "LIST: masked_by_mask_index_list for Volume 4 = []\n",
      "      mask_mode for Volume                 4 = 0\n",
      "\n",
      "Union_master component master initialized sucessfully\n",
      "Detector: logger_space_zx_I=18092.6 logger_space_zx_ERR=33.1511 logger_space_zx_N=879706 \"logger_zx.dat\"\n",
      "Detector: logger_space_zy_I=18092.6 logger_space_zy_ERR=33.1511 logger_space_zy_N=879706 \"logger_zy.dat\"\n",
      "\n",
      "\n",
      "Top 20 most common histories. Shows the index of volumes entered (VX), and the scattering processes (PX)\n",
      "5892\t N I=4.578027E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "895\t N I=2.001013E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "143\t N I=3.463667E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "108\t N I=2.251620E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "66\t N I=1.949978E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "65\t N I=1.194341E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "37\t N I=7.657474E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "14\t N I=3.683233E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "19\t N I=3.455680E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "17\t N I=2.855082E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "13\t N I=2.822139E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "9\t N I=2.778669E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "17\t N I=2.373749E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "18\t N I=2.297456E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.200556E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "11\t N I=1.857153E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "10\t N I=1.571294E-01 \t V0 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "6\t N I=9.084604E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "5\t N I=8.596945E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "4\t N I=8.405909E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "loading system configuration\n",
      "\n"
     ]
    }
   ],
   "source": [
    "instrument.backengine()\n",
    "data = instrument.data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "History file written by the McStas component Union_master \n",
      "When running with MPI, the results may be from just a single thread, meaning intensities are divided by number of threads\n",
      "----- Description of the used volumes -----------------------------------------------------------------------------------\n",
      "V0: Surrounding vacuum \n",
      "V1: sample_geometry  Material: Sample   P0:  P1: Sample_pow\n",
      "V2: sample_container  Material: Al   P0:  P1: Al_pow\n",
      "V3: cryostat_wall  Material: Al   P0:  P1: Al_pow\n",
      "V4: cryostat_wall_vacuum  Material: Vacuum  \n",
      "----- Histories sorted after intensity ----------------------------------------------------------------------------------\n",
      "5892\t N I=4.578027E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "895\t N I=2.001013E+01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "143\t N I=3.463667E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "108\t N I=2.251620E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "66\t N I=1.949978E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "65\t N I=1.194341E+00 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "37\t N I=7.657474E-01 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "14\t N I=3.683233E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "19\t N I=3.455680E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "17\t N I=2.855082E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "13\t N I=2.822139E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "9\t N I=2.778669E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "17\t N I=2.373749E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "18\t N I=2.297456E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.200556E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "11\t N I=1.857153E-01 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "10\t N I=1.571294E-01 \t V0 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "6\t N I=9.084604E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "5\t N I=8.596945E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "4\t N I=8.405909E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "4\t N I=7.833313E-02 \t V0 -> V3 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "4\t N I=7.512586E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "5\t N I=7.432999E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "3\t N I=6.171041E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "5\t N I=5.967012E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=4.201788E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=4.079794E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.763233E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=3.552621E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.316035E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.311965E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.308331E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "2\t N I=3.307357E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.793967E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.790450E-02 \t V0 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.762920E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "2\t N I=2.734459E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "2\t N I=2.732315E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.380510E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "2\t N I=2.150892E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.923950E-02 \t V0 -> V3 -> P0 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.921815E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P0 -> V0 \n",
      "1\t N I=1.921198E-02 \t V0 -> V3 -> V4 -> V2 -> P0 -> V4 -> V3 -> V0 \n",
      "3\t N I=1.884439E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> V2 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.811470E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.658620E-02 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.657351E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> V2 -> P1 -> V1 -> V2 -> V4 -> V3 -> P1 -> V0 \n",
      "1\t N I=1.654961E-02 \t V0 -> V3 -> P1 -> P1 -> V0 \n",
      "1\t N I=1.653411E-02 \t V0 -> V3 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "5\t N I=1.536141E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.479142E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "2\t N I=1.377721E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> P1 -> V0 \n",
      "1\t N I=1.072312E-02 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "3\t N I=6.601606E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P0 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=4.722113E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P0 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=4.516881E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=4.340485E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> P1 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.643161E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=3.424502E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V4 -> V3 -> P1 -> V0 \n",
      "2\t N I=2.831503E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=2.169313E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> V2 -> P1 -> P1 -> V1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=1.570388E-03 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "4\t N I=1.393536E-03 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=4.412262E-04 \t V0 -> V3 -> V4 -> V2 -> P1 -> V1 -> P1 -> P1 -> P1 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "1\t N I=7.660815E-05 \t V0 -> V3 -> V4 -> V2 -> V1 -> P1 -> P0 -> P1 -> V2 -> V4 -> V3 -> V0 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "with open(\"run_folder/union_history.dat\") as file:\n",
    "    instrument_string = file.read()\n",
    "    print(instrument_string)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Interpreting the data\n",
    "Now all the histories contain a scattering process as this is necessary to reach the rectangle placed by the Union_conditional_PSD component set at 2theta = 60 deg. We also observe the intensities are much lower, simply because only a fraction of the simulated rays satisfy this condition."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "celltoolbar": "Tags",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

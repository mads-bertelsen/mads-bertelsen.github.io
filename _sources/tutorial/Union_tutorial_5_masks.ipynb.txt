{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Union tutorial on masks\n",
    "There are some geometries that are impossible to build using only the priority based system geometry system, for example making part of a cylinder thinner, which is needed for a cryostat window. In many such cases, masks can be used to solve the problem."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from mcstasscript.interface import instr, functions, plotter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "instrument = instr.McStas_instr(\"python_tutorial\", input_path=\"run_folder\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Setting up an example without masks\n",
    "First we set up an example with a thick and hollow Al cylinder and a logger to view the spatial distribution of scattering."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "Al_inc = instrument.add_component(\"Al_inc\", \"Incoherent_process\")\n",
    "Al_inc.sigma = 0.0082\n",
    "Al_inc.unit_cell_volume = 66.4\n",
    "\n",
    "Al_pow = instrument.add_component(\"Al_pow\", \"Powder_process\")\n",
    "Al_pow.reflections = '\"Al.laz\"'\n",
    "\n",
    "Al = instrument.add_component(\"Al\", \"Union_make_material\")\n",
    "Al.process_string = '\"Al_inc,Al_pow\"'\n",
    "Al.my_absorption = 100*0.231/66.4 # barns [m^2 E-28]*Ã…^3 [m^3 E-30]=[m E-2], factor 100\n",
    "\n",
    "src = instrument.add_component(\"source\", \"Source_div\")\n",
    "\n",
    "src.xwidth = 0.2\n",
    "src.yheight = 0.035\n",
    "src.focus_aw = 0.01\n",
    "src.focus_ah = 0.01\n",
    "\n",
    "\n",
    "src.lambda0 = instrument.add_parameter(\"wavelength\", value=5.0,\n",
    "                                       comment=\"Wavelength in [Ang]\")\n",
    "src.dlambda = \"0.01*wavelength\"\n",
    "src.flux = 1E13\n",
    "\n",
    "wall = instrument.add_component(\"wall\", \"Union_cylinder\")\n",
    "wall.set_AT([0,0,1], RELATIVE=src)\n",
    "wall.yheight = 0.15\n",
    "wall.radius = 0.1\n",
    "wall.material_string='\"Al\"' \n",
    "wall.priority = 10\n",
    "\n",
    "wall_vac = instrument.add_component(\"wall_vacuum\", \"Union_cylinder\")\n",
    "wall_vac.set_AT([0,0,0], RELATIVE=wall)\n",
    "wall_vac.yheight = 0.15 + 0.01\n",
    "wall_vac.radius = 0.1 - 0.02\n",
    "wall_vac.material_string='\"Vacuum\"' \n",
    "wall_vac.priority = 50\n",
    "\n",
    "logger_zx = instrument.add_component(\"logger_space_zx\", \"Union_logger_2D_space\")\n",
    "logger_zx.set_RELATIVE(wall)\n",
    "logger_zx.D_direction_1 = '\"z\"'\n",
    "logger_zx.D1_min = -0.12\n",
    "logger_zx.D1_max = 0.12\n",
    "logger_zx.n1 = 300\n",
    "logger_zx.D_direction_2 = '\"x\"'\n",
    "logger_zx.D2_min = -0.12\n",
    "logger_zx.D2_max = 0.12\n",
    "logger_zx.n2 = 300\n",
    "logger_zx.filename = '\"logger_zx.dat\"'\n",
    "\n",
    "master = instrument.add_component(\"master\", \"Union_master\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "tags": [
     "scroll-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO: Using directory: \"/Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/data_folder/union_masks_67\"\n",
      "INFO: Regenerating c-file: python_tutorial.c\n",
      "CFLAGS= -I@MCCODE_LIB@/share/\n",
      "INFO: Recompiling: ./python_tutorial.out\n",
      "mccode-r.c:2837:3: warning: expression result unused [-Wunused-value]\n",
      "  *t0;\n",
      "  ^~~\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1604:105: warning: incompatible pointer types passing 'int (const struct saved_history_struct *, const struct saved_history_struct *)' to parameter of type 'int (* _Nonnull)(const void *, const void *)' [-Wincompatible-pointer-types]\n",
      "  qsort(total_history.saved_histories,total_history.used_elements,sizeof (struct saved_history_struct), Sample_compare_history_intensities);\n",
      "                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/stdlib.h:161:22: note: passing argument to parameter '__compar' here\n",
      "            int (* _Nonnull __compar)(const void *, const void *));\n",
      "                            ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1613:20: warning: incompatible pointer types passing 'struct saved_history_struct *' to parameter of type 'struct dynamic_history_list *' [-Wincompatible-pointer-types]\n",
      "    printf_history(&total_history.saved_histories[history_iterate]);\n",
      "                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1434:50: note: passing argument to parameter 'history' here\n",
      "void printf_history(struct dynamic_history_list *history) {\n",
      "                                                 ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:2030:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:839:1: warning: non-void function does not return a value in all control paths [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:883:1: warning: non-void function does not return a value [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: warning: format string is not a string literal (potentially insecure) [-Wformat-security]\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^~~~~~~~\n",
      "./python_tutorial.c:11415:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^~~~~~~~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: note: treat the string as an argument to avoid this\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^\n",
      "                                            \"%s\", \n",
      "./python_tutorial.c:11415:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:15: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "              ^~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:90: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:789:92: warning: expression result unused [-Wunused-value]\n",
      "              volume_index_main,Volumes[volume_index_main]->geometry.is_masked_volume == 0 ||\n",
      "              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "13 warnings generated.\n",
      "INFO: ===\n",
      "INFO: Placing instr file copy python_tutorial.instr in dataset /Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/data_folder/union_masks_67\n",
      "\n",
      "    Opening input file '/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//data/Al.laz' (Table_Read_Offset)\n",
      "Table from file 'Al.laz' (block 1) is 26 x 18 (x=1:8), constant step. interpolation: linear\n",
      "  '# TITLE *Aluminum-Al-[FM3-M] Miller, H.P.jr.;DuMond, J.W.M.[1942] at 298 K; ...'\n",
      "PowderN: Al_pow: Reading 26 rows from Al.laz\n",
      "PowderN: Al_pow: Read 26 reflections from file 'Al.laz'\n",
      "PowderN: Al_pow: Vc=66.4 [Angs] sigma_abs=0.924 [barn] sigma_inc=0.0328 [barn] reflections=Al.laz\n",
      "---------------------------------------------------------------------\n",
      "global_process_list.num_elements: 2\n",
      "name of process [0]: Al_inc \n",
      "component index [0]: 1 \n",
      "name of process [1]: Al_pow \n",
      "component index [1]: 2 \n",
      "---------------------------------------------------------------------\n",
      "global_material_list.num_elements: 1\n",
      "name of material    [0]: Al \n",
      "component index     [0]: 3 \n",
      "my_absoprtion       [0]: 0.347892 \n",
      "number of processes [0]: 2 \n",
      "---------------------------------------------------------------------\n",
      "global_geometry_list.num_elements: 1\n",
      "\n",
      "name of geometry    [0]: wall \n",
      "component index     [0]: 5 \n",
      "Volume.name         [0]: wall \n",
      "Volume.p_physics.is_vacuum           [0]: 0 \n",
      "Volume.p_physics.my_absorption       [0]: 0.347892 \n",
      "Volume.p_physics.number of processes [0]: 2 \n",
      "Volume.geometry.shape                [0]: cylinder \n",
      "Volume.geometry.center.x             [0]: 0.000000 \n",
      "Volume.geometry.center.y             [0]: 0.000000 \n",
      "Volume.geometry.center.z             [0]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [0]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [0]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [0]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [0]: 0.100000 \n",
      "Volume.geometry.geometry_parameters.height [0]: 0.150000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [0]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [1]: wall_vacuum \n",
      "component index     [1]: 6 \n",
      "Volume.name         [1]: wall_vacuum \n",
      "Volume.p_physics.is_vacuum           [1]: 1 \n",
      "Volume.p_physics.my_absorption       [1]: 0.000000 \n",
      "Volume.p_physics.number of processes [1]: 0 \n",
      "Volume.geometry.shape                [1]: cylinder \n",
      "Volume.geometry.center.x             [1]: 0.000000 \n",
      "Volume.geometry.center.y             [1]: 0.000000 \n",
      "Volume.geometry.center.z             [1]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [1]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [1]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [1]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [1]: 0.080000 \n",
      "Volume.geometry.geometry_parameters.height [1]: 0.160000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [1]: [0.000000 0.000000 1.000000] \n",
      "---------------------------------------------------------------------\n",
      "number_of_volumes = 3\n",
      "number_of_masks = 0\n",
      "number_of_masked_volumes = 0\n",
      "\n",
      " ---- Overview of the lists generated for each volume ---- \n",
      "List overview for surrounding vacuum\n",
      "LIST: Children for Volume                  0 = [1,2]\n",
      "LIST: Direct_children for Volume           0 = [1,2]\n",
      "LIST: Intersect_check_list for Volume      0 = [1,2]\n",
      "LIST: Mask_intersect_list for Volume       0 = []\n",
      "LIST: Destinations_list for Volume         0 = []\n",
      "LIST: Reduced_destinations_list for Volume 0 = []\n",
      "LIST: Next_volume_list for Volume          0 = [1,2]\n",
      "LIST: mask_list for Volume                 0 = []\n",
      "LIST: masked_by_list for Volume            0 = []\n",
      "LIST: masked_by_mask_index_list for Volume 0 = []\n",
      "      mask_mode for Volume                 0 = 0\n",
      "\n",
      "List overview for wall with cylinder shape made of Al\n",
      "LIST: Children for Volume                  1 = []\n",
      "LIST: Direct_children for Volume           1 = []\n",
      "LIST: Intersect_check_list for Volume      1 = [2]\n",
      "LIST: Mask_intersect_list for Volume       1 = []\n",
      "LIST: Destinations_list for Volume         1 = [0]\n",
      "LIST: Reduced_destinations_list for Volume 1 = []\n",
      "LIST: Next_volume_list for Volume          1 = [0,2]\n",
      "      Is_vacuum for Volume                 1 = 0\n",
      "      is_mask_volume for Volume            1 = 0\n",
      "      is_masked_volume for Volume          1 = 0\n",
      "      is_exit_volume for Volume            1 = 0\n",
      "LIST: mask_list for Volume                 1 = []\n",
      "LIST: masked_by_list for Volume            1 = []\n",
      "LIST: masked_by_mask_index_list for Volume 1 = []\n",
      "      mask_mode for Volume                 1 = 0\n",
      "\n",
      "List overview for wall_vacuum with cylinder shape made of Vacuum\n",
      "LIST: Children for Volume                  2 = []\n",
      "LIST: Direct_children for Volume           2 = []\n",
      "LIST: Intersect_check_list for Volume      2 = []\n",
      "LIST: Mask_intersect_list for Volume       2 = []\n",
      "LIST: Destinations_list for Volume         2 = [0,1]\n",
      "LIST: Reduced_destinations_list for Volume 2 = [1]\n",
      "LIST: Next_volume_list for Volume          2 = [0,1]\n",
      "      Is_vacuum for Volume                 2 = 1\n",
      "      is_mask_volume for Volume            2 = 0\n",
      "      is_masked_volume for Volume          2 = 0\n",
      "      is_exit_volume for Volume            2 = 0\n",
      "LIST: mask_list for Volume                 2 = []\n",
      "LIST: masked_by_list for Volume            2 = []\n",
      "LIST: masked_by_mask_index_list for Volume 2 = []\n",
      "      mask_mode for Volume                 2 = 0\n",
      "\n",
      "Union_master component master initialized sucessfully\n",
      "Detector: logger_space_zx_I=1451.97 logger_space_zx_ERR=4.41664 logger_space_zx_N=112127 \"logger_zx.dat\"\n",
      "loading system configuration\n",
      "\n"
     ]
    }
   ],
   "source": [
    "instrument.settings(ncount=2E6, output_path=\"data_folder/union_masks\")\n",
    "\n",
    "data = instrument.backengine()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting data with name logger_space_zx\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plotter.make_sub_plot(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Masks\n",
    "All Union geometries can act as a mask for a list of other already defined geometries. The geometries affected by a mask will only exist inside the mask, while the parts outside will not have any effect on this simulation. This provides some interesting geometrical capabilities, for example by defining two spheres with some overlap and making one a mask of the other, a classical lens shape can be created.\n",
    "\n",
    "The relevant parameters of all geometry components are:\n",
    "- mask_string : comma separated list of geometry names the mask should be applied to\n",
    "- mask_setting : selects between \"ANY\" or \"ALL\" mode. Default mode is \"ALL\".\n",
    "\n",
    "The mask mode is only important if several masks affect the same geometry, per default just having any of the masks overlap the target geometry allow it to exists, which correspond to the \"ANY\" mode. If the \"ALL\" mode is selected, the target geometry will only exists in regions where all the masks and itself overlap.\n",
    "\n",
    "Note that a unique priority is still necessary, but it is not used."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Adding a window using masks\n",
    "Here we add a window to one side of the cylinder by inserting a larger vacuum cylinder, but mask it so that it is only active in the area around the window. In this way we get a nice curved window. We chose a box shape for the mask, but we could also have chosen a cylinder to get a round window."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "window = instrument.add_component(\"window\", \"Union_cylinder\", before=\"master\")\n",
    "window.set_AT([0,0,0], RELATIVE=wall)\n",
    "window.yheight = 0.15 + 0.02\n",
    "window.radius = 0.1 - 0.01\n",
    "window.material_string='\"Vacuum\"' \n",
    "window.priority = 25\n",
    "\n",
    "mask = instrument.add_component(\"mask\", \"Union_box\", before=\"master\")\n",
    "mask.xwidth = 0.1\n",
    "mask.yheight = 0.2\n",
    "mask.zdepth = 0.09\n",
    "mask.priority = 1\n",
    "mask.mask_string='\"window\"'\n",
    "mask.set_AT([0,0,-0.1], RELATIVE=wall)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "tags": [
     "scroll-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO: Using directory: \"/Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/data_folder/union_masks_68\"\n",
      "INFO: Regenerating c-file: python_tutorial.c\n",
      "CFLAGS= -I@MCCODE_LIB@/share/\n",
      "INFO: Recompiling: ./python_tutorial.out\n",
      "mccode-r.c:2837:3: warning: expression result unused [-Wunused-value]\n",
      "  *t0;\n",
      "  ^~~\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1604:105: warning: incompatible pointer types passing 'int (const struct saved_history_struct *, const struct saved_history_struct *)' to parameter of type 'int (* _Nonnull)(const void *, const void *)' [-Wincompatible-pointer-types]\n",
      "  qsort(total_history.saved_histories,total_history.used_elements,sizeof (struct saved_history_struct), Sample_compare_history_intensities);\n",
      "                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/stdlib.h:161:22: note: passing argument to parameter '__compar' here\n",
      "            int (* _Nonnull __compar)(const void *, const void *));\n",
      "                            ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1613:20: warning: incompatible pointer types passing 'struct saved_history_struct *' to parameter of type 'struct dynamic_history_list *' [-Wincompatible-pointer-types]\n",
      "    printf_history(&total_history.saved_histories[history_iterate]);\n",
      "                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1434:50: note: passing argument to parameter 'history' here\n",
      "void printf_history(struct dynamic_history_list *history) {\n",
      "                                                 ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:2030:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:839:1: warning: non-void function does not return a value in all control paths [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:883:1: warning: non-void function does not return a value [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: warning: format string is not a string literal (potentially insecure) [-Wformat-security]\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^~~~~~~~\n",
      "./python_tutorial.c:11875:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^~~~~~~~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: note: treat the string as an argument to avoid this\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^\n",
      "                                            \"%s\", \n",
      "./python_tutorial.c:11875:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:15: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "              ^~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:90: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:789:92: warning: expression result unused [-Wunused-value]\n",
      "              volume_index_main,Volumes[volume_index_main]->geometry.is_masked_volume == 0 ||\n",
      "              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "13 warnings generated.\n",
      "INFO: ===\n",
      "INFO: Placing instr file copy python_tutorial.instr in dataset /Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/data_folder/union_masks_68\n",
      "\n",
      "    Opening input file '/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//data/Al.laz' (Table_Read_Offset)\n",
      "Table from file 'Al.laz' (block 1) is 26 x 18 (x=1:8), constant step. interpolation: linear\n",
      "  '# TITLE *Aluminum-Al-[FM3-M] Miller, H.P.jr.;DuMond, J.W.M.[1942] at 298 K; ...'\n",
      "PowderN: Al_pow: Reading 26 rows from Al.laz\n",
      "PowderN: Al_pow: Read 26 reflections from file 'Al.laz'\n",
      "PowderN: Al_pow: Vc=66.4 [Angs] sigma_abs=0.924 [barn] sigma_inc=0.0328 [barn] reflections=Al.laz\n",
      "---------------------------------------------------------------------\n",
      "global_process_list.num_elements: 2\n",
      "name of process [0]: Al_inc \n",
      "component index [0]: 1 \n",
      "name of process [1]: Al_pow \n",
      "component index [1]: 2 \n",
      "---------------------------------------------------------------------\n",
      "global_material_list.num_elements: 1\n",
      "name of material    [0]: Al \n",
      "component index     [0]: 3 \n",
      "my_absoprtion       [0]: 0.347892 \n",
      "number of processes [0]: 2 \n",
      "---------------------------------------------------------------------\n",
      "global_geometry_list.num_elements: 1\n",
      "\n",
      "name of geometry    [0]: wall \n",
      "component index     [0]: 5 \n",
      "Volume.name         [0]: wall \n",
      "Volume.p_physics.is_vacuum           [0]: 0 \n",
      "Volume.p_physics.my_absorption       [0]: 0.347892 \n",
      "Volume.p_physics.number of processes [0]: 2 \n",
      "Volume.geometry.shape                [0]: cylinder \n",
      "Volume.geometry.center.x             [0]: 0.000000 \n",
      "Volume.geometry.center.y             [0]: 0.000000 \n",
      "Volume.geometry.center.z             [0]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [0]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [0]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [0]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [0]: 0.100000 \n",
      "Volume.geometry.geometry_parameters.height [0]: 0.150000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [0]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [1]: wall_vacuum \n",
      "component index     [1]: 6 \n",
      "Volume.name         [1]: wall_vacuum \n",
      "Volume.p_physics.is_vacuum           [1]: 1 \n",
      "Volume.p_physics.my_absorption       [1]: 0.000000 \n",
      "Volume.p_physics.number of processes [1]: 0 \n",
      "Volume.geometry.shape                [1]: cylinder \n",
      "Volume.geometry.center.x             [1]: 0.000000 \n",
      "Volume.geometry.center.y             [1]: 0.000000 \n",
      "Volume.geometry.center.z             [1]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [1]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [1]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [1]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [1]: 0.080000 \n",
      "Volume.geometry.geometry_parameters.height [1]: 0.160000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [1]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [2]: window \n",
      "component index     [2]: 8 \n",
      "Volume.name         [2]: window \n",
      "Volume.p_physics.is_vacuum           [2]: 1 \n",
      "Volume.p_physics.my_absorption       [2]: 0.000000 \n",
      "Volume.p_physics.number of processes [2]: 0 \n",
      "Volume.geometry.shape                [2]: cylinder \n",
      "Volume.geometry.center.x             [2]: 0.000000 \n",
      "Volume.geometry.center.y             [2]: 0.000000 \n",
      "Volume.geometry.center.z             [2]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [2]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [2]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [2]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [2]: 0.090000 \n",
      "Volume.geometry.geometry_parameters.height [2]: 0.170000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [2]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [3]: mask \n",
      "component index     [3]: 9 \n",
      "Volume.name         [3]: mask \n",
      "Volume.geometry.shape                [3]: box \n",
      "Volume.geometry.center.x             [3]: 0.000000 \n",
      "Volume.geometry.center.y             [3]: 0.000000 \n",
      "Volume.geometry.center.z             [3]: 0.900000 \n",
      "Volume.geometry.rotation_matrix[0]           [3]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [3]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [3]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [3]: [0.000000 0.000000 1.000000] \n",
      "---------------------------------------------------------------------\n",
      "number_of_volumes = 5\n",
      "number_of_masks = 1\n",
      "number_of_masked_volumes = 1\n",
      "\n",
      " ---- Overview of the lists generated for each volume ---- \n",
      "List overview for surrounding vacuum\n",
      "LIST: Children for Volume                  0 = [1,2,3,4]\n",
      "LIST: Direct_children for Volume           0 = [1,3,4]\n",
      "LIST: Intersect_check_list for Volume      0 = [1,2,4]\n",
      "LIST: Mask_intersect_list for Volume       0 = [3]\n",
      "LIST: Destinations_list for Volume         0 = []\n",
      "LIST: Reduced_destinations_list for Volume 0 = []\n",
      "LIST: Next_volume_list for Volume          0 = [3,1,2]\n",
      "LIST: mask_list for Volume                 0 = []\n",
      "LIST: masked_by_list for Volume            0 = []\n",
      "LIST: masked_by_mask_index_list for Volume 0 = []\n",
      "      mask_mode for Volume                 0 = 0\n",
      "\n",
      "List overview for wall with cylinder shape made of Al\n",
      "LIST: Children for Volume                  1 = []\n",
      "LIST: Direct_children for Volume           1 = []\n",
      "LIST: Intersect_check_list for Volume      1 = [2,4]\n",
      "LIST: Mask_intersect_list for Volume       1 = [3]\n",
      "LIST: Destinations_list for Volume         1 = [0]\n",
      "LIST: Reduced_destinations_list for Volume 1 = []\n",
      "LIST: Next_volume_list for Volume          1 = [0,3,2]\n",
      "      Is_vacuum for Volume                 1 = 0\n",
      "      is_mask_volume for Volume            1 = 0\n",
      "      is_masked_volume for Volume          1 = 0\n",
      "      is_exit_volume for Volume            1 = 0\n",
      "LIST: mask_list for Volume                 1 = []\n",
      "LIST: masked_by_list for Volume            1 = []\n",
      "LIST: masked_by_mask_index_list for Volume 1 = []\n",
      "      mask_mode for Volume                 1 = 0\n",
      "\n",
      "List overview for wall_vacuum with cylinder shape made of Vacuum\n",
      "LIST: Children for Volume                  2 = []\n",
      "LIST: Direct_children for Volume           2 = []\n",
      "LIST: Intersect_check_list for Volume      2 = [4]\n",
      "LIST: Mask_intersect_list for Volume       2 = []\n",
      "LIST: Destinations_list for Volume         2 = [0,1,3]\n",
      "LIST: Reduced_destinations_list for Volume 2 = [1,3]\n",
      "LIST: Next_volume_list for Volume          2 = [0,1,3]\n",
      "      Is_vacuum for Volume                 2 = 1\n",
      "      is_mask_volume for Volume            2 = 0\n",
      "      is_masked_volume for Volume          2 = 0\n",
      "      is_exit_volume for Volume            2 = 0\n",
      "LIST: mask_list for Volume                 2 = []\n",
      "LIST: masked_by_list for Volume            2 = []\n",
      "LIST: masked_by_mask_index_list for Volume 2 = []\n",
      "      mask_mode for Volume                 2 = 0\n",
      "\n",
      "List overview for window with cylinder shape made of Vacuum\n",
      "LIST: Children for Volume                  3 = [2]\n",
      "LIST: Direct_children for Volume           3 = [2]\n",
      "LIST: Intersect_check_list for Volume      3 = [2,4]\n",
      "LIST: Mask_intersect_list for Volume       3 = []\n",
      "LIST: Destinations_list for Volume         3 = [0,1]\n",
      "LIST: Reduced_destinations_list for Volume 3 = [1]\n",
      "LIST: Next_volume_list for Volume          3 = [0,1,2]\n",
      "      Is_vacuum for Volume                 3 = 1\n",
      "      is_mask_volume for Volume            3 = 0\n",
      "      is_masked_volume for Volume          3 = 1\n",
      "      is_exit_volume for Volume            3 = 0\n",
      "LIST: mask_list for Volume                 3 = []\n",
      "LIST: masked_by_list for Volume            3 = [4]\n",
      "LIST: masked_by_mask_index_list for Volume 3 = [0]\n",
      "      mask_mode for Volume                 3 = 1\n",
      "\n",
      "List overview for mask with box shape made of Mask\n",
      "LIST: Children for Volume                  4 = []\n",
      "LIST: Direct_children for Volume           4 = []\n",
      "LIST: Intersect_check_list for Volume      4 = []\n",
      "LIST: Mask_intersect_list for Volume       4 = []\n",
      "LIST: Destinations_list for Volume         4 = [0,1,2]\n",
      "LIST: Reduced_destinations_list for Volume 4 = [1,2]\n",
      "LIST: Next_volume_list for Volume          4 = [0,1,2]\n",
      "      Is_vacuum for Volume                 4 = 0\n",
      "      is_mask_volume for Volume            4 = 1\n",
      "      is_masked_volume for Volume          4 = 0\n",
      "      is_exit_volume for Volume            4 = 0\n",
      "LIST: mask_list for Volume                 4 = [3]\n",
      "LIST: masked_by_list for Volume            4 = []\n",
      "LIST: masked_by_mask_index_list for Volume 4 = []\n",
      "      mask_mode for Volume                 4 = 1\n",
      "\n",
      "Union_master component master initialized sucessfully\n",
      "Detector: logger_space_zx_I=1302.31 logger_space_zx_ERR=4.18281 logger_space_zx_N=100498 \"logger_zx.dat\"\n",
      "loading system configuration\n",
      "\n"
     ]
    }
   ],
   "source": [
    "data = instrument.backengine()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting data with name logger_space_zx\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plotter.make_sub_plot(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Adding an external window using a mask\n",
    "It is also possible to create a thinner section where the material is reduced from the outside. Here we need to add both a vacuum and an aluminium geometry, both of which need to have a priority lower than the original inner vacuum. One mask can handle several geometries, just include both names in the *mask_string* parameter."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "o_window = instrument.add_component(\"outer_window\", \"Union_cylinder\", before=\"master\")\n",
    "o_window.set_AT([0,0,0], RELATIVE=wall)\n",
    "o_window.yheight = 0.15 + 0.03\n",
    "o_window.radius = 0.1 + 0.01\n",
    "o_window.material_string='\"Vacuum\"' \n",
    "o_window.priority = 30\n",
    "\n",
    "o_window_al = instrument.add_component(\"outer_window_Al\", \"Union_cylinder\", before=\"master\")\n",
    "o_window_al.set_AT([0,0,0], RELATIVE=wall)\n",
    "o_window_al.yheight = 0.15 + 0.04\n",
    "o_window_al.radius = 0.1 - 0.01\n",
    "o_window_al.material_string='\"Al\"' \n",
    "o_window_al.priority = 31\n",
    "\n",
    "mask = instrument.add_component(\"mask_outer\", \"Union_box\", before=\"master\")\n",
    "mask.xwidth = 0.12\n",
    "mask.yheight = 0.2\n",
    "mask.zdepth = 0.09\n",
    "mask.priority = 2\n",
    "mask.mask_string='\"outer_window,outer_window_Al\"'\n",
    "mask.set_AT([0,0,0.1], RELATIVE=wall)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "tags": [
     "scroll-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO: Using directory: \"/Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/data_folder/union_masks_69\"\n",
      "INFO: Regenerating c-file: python_tutorial.c\n",
      "CFLAGS= -I@MCCODE_LIB@/share/\n",
      "INFO: Recompiling: ./python_tutorial.out\n",
      "mccode-r.c:2837:3: warning: expression result unused [-Wunused-value]\n",
      "  *t0;\n",
      "  ^~~\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1604:105: warning: incompatible pointer types passing 'int (const struct saved_history_struct *, const struct saved_history_struct *)' to parameter of type 'int (* _Nonnull)(const void *, const void *)' [-Wincompatible-pointer-types]\n",
      "  qsort(total_history.saved_histories,total_history.used_elements,sizeof (struct saved_history_struct), Sample_compare_history_intensities);\n",
      "                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/stdlib.h:161:22: note: passing argument to parameter '__compar' here\n",
      "            int (* _Nonnull __compar)(const void *, const void *));\n",
      "                            ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1613:20: warning: incompatible pointer types passing 'struct saved_history_struct *' to parameter of type 'struct dynamic_history_list *' [-Wincompatible-pointer-types]\n",
      "    printf_history(&total_history.saved_histories[history_iterate]);\n",
      "                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1434:50: note: passing argument to parameter 'history' here\n",
      "void printf_history(struct dynamic_history_list *history) {\n",
      "                                                 ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:2030:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:839:1: warning: non-void function does not return a value in all control paths [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:883:1: warning: non-void function does not return a value [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: warning: format string is not a string literal (potentially insecure) [-Wformat-security]\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^~~~~~~~\n",
      "./python_tutorial.c:12367:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^~~~~~~~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: note: treat the string as an argument to avoid this\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^\n",
      "                                            \"%s\", \n",
      "./python_tutorial.c:12367:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:15: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "              ^~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:90: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:789:92: warning: expression result unused [-Wunused-value]\n",
      "              volume_index_main,Volumes[volume_index_main]->geometry.is_masked_volume == 0 ||\n",
      "              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "13 warnings generated.\n",
      "INFO: ===\n",
      "INFO: Placing instr file copy python_tutorial.instr in dataset /Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/data_folder/union_masks_69\n",
      "\n",
      "    Opening input file '/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//data/Al.laz' (Table_Read_Offset)\n",
      "Table from file 'Al.laz' (block 1) is 26 x 18 (x=1:8), constant step. interpolation: linear\n",
      "  '# TITLE *Aluminum-Al-[FM3-M] Miller, H.P.jr.;DuMond, J.W.M.[1942] at 298 K; ...'\n",
      "PowderN: Al_pow: Reading 26 rows from Al.laz\n",
      "PowderN: Al_pow: Read 26 reflections from file 'Al.laz'\n",
      "PowderN: Al_pow: Vc=66.4 [Angs] sigma_abs=0.924 [barn] sigma_inc=0.0328 [barn] reflections=Al.laz\n",
      "---------------------------------------------------------------------\n",
      "global_process_list.num_elements: 2\n",
      "name of process [0]: Al_inc \n",
      "component index [0]: 1 \n",
      "name of process [1]: Al_pow \n",
      "component index [1]: 2 \n",
      "---------------------------------------------------------------------\n",
      "global_material_list.num_elements: 1\n",
      "name of material    [0]: Al \n",
      "component index     [0]: 3 \n",
      "my_absoprtion       [0]: 0.347892 \n",
      "number of processes [0]: 2 \n",
      "---------------------------------------------------------------------\n",
      "global_geometry_list.num_elements: 1\n",
      "\n",
      "name of geometry    [0]: wall \n",
      "component index     [0]: 5 \n",
      "Volume.name         [0]: wall \n",
      "Volume.p_physics.is_vacuum           [0]: 0 \n",
      "Volume.p_physics.my_absorption       [0]: 0.347892 \n",
      "Volume.p_physics.number of processes [0]: 2 \n",
      "Volume.geometry.shape                [0]: cylinder \n",
      "Volume.geometry.center.x             [0]: 0.000000 \n",
      "Volume.geometry.center.y             [0]: 0.000000 \n",
      "Volume.geometry.center.z             [0]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [0]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [0]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [0]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [0]: 0.100000 \n",
      "Volume.geometry.geometry_parameters.height [0]: 0.150000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [0]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [1]: wall_vacuum \n",
      "component index     [1]: 6 \n",
      "Volume.name         [1]: wall_vacuum \n",
      "Volume.p_physics.is_vacuum           [1]: 1 \n",
      "Volume.p_physics.my_absorption       [1]: 0.000000 \n",
      "Volume.p_physics.number of processes [1]: 0 \n",
      "Volume.geometry.shape                [1]: cylinder \n",
      "Volume.geometry.center.x             [1]: 0.000000 \n",
      "Volume.geometry.center.y             [1]: 0.000000 \n",
      "Volume.geometry.center.z             [1]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [1]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [1]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [1]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [1]: 0.080000 \n",
      "Volume.geometry.geometry_parameters.height [1]: 0.160000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [1]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [2]: window \n",
      "component index     [2]: 8 \n",
      "Volume.name         [2]: window \n",
      "Volume.p_physics.is_vacuum           [2]: 1 \n",
      "Volume.p_physics.my_absorption       [2]: 0.000000 \n",
      "Volume.p_physics.number of processes [2]: 0 \n",
      "Volume.geometry.shape                [2]: cylinder \n",
      "Volume.geometry.center.x             [2]: 0.000000 \n",
      "Volume.geometry.center.y             [2]: 0.000000 \n",
      "Volume.geometry.center.z             [2]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [2]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [2]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [2]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [2]: 0.090000 \n",
      "Volume.geometry.geometry_parameters.height [2]: 0.170000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [2]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [3]: mask \n",
      "component index     [3]: 9 \n",
      "Volume.name         [3]: mask \n",
      "Volume.geometry.shape                [3]: box \n",
      "Volume.geometry.center.x             [3]: 0.000000 \n",
      "Volume.geometry.center.y             [3]: 0.000000 \n",
      "Volume.geometry.center.z             [3]: 0.900000 \n",
      "Volume.geometry.rotation_matrix[0]           [3]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [3]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [3]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [3]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [4]: outer_window \n",
      "component index     [4]: 10 \n",
      "Volume.name         [4]: outer_window \n",
      "Volume.p_physics.is_vacuum           [4]: 1 \n",
      "Volume.p_physics.my_absorption       [4]: 0.000000 \n",
      "Volume.p_physics.number of processes [4]: 0 \n",
      "Volume.geometry.shape                [4]: cylinder \n",
      "Volume.geometry.center.x             [4]: 0.000000 \n",
      "Volume.geometry.center.y             [4]: 0.000000 \n",
      "Volume.geometry.center.z             [4]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [4]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [4]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [4]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [4]: 0.110000 \n",
      "Volume.geometry.geometry_parameters.height [4]: 0.180000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [4]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [5]: outer_window_Al \n",
      "component index     [5]: 11 \n",
      "Volume.name         [5]: outer_window_Al \n",
      "Volume.p_physics.is_vacuum           [5]: 0 \n",
      "Volume.p_physics.my_absorption       [5]: 0.347892 \n",
      "Volume.p_physics.number of processes [5]: 2 \n",
      "Volume.geometry.shape                [5]: cylinder \n",
      "Volume.geometry.center.x             [5]: 0.000000 \n",
      "Volume.geometry.center.y             [5]: 0.000000 \n",
      "Volume.geometry.center.z             [5]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [5]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [5]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [5]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [5]: 0.090000 \n",
      "Volume.geometry.geometry_parameters.height [5]: 0.190000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [5]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [6]: mask_outer \n",
      "component index     [6]: 12 \n",
      "Volume.name         [6]: mask_outer \n",
      "Volume.geometry.shape                [6]: box \n",
      "Volume.geometry.center.x             [6]: 0.000000 \n",
      "Volume.geometry.center.y             [6]: 0.000000 \n",
      "Volume.geometry.center.z             [6]: 1.100000 \n",
      "Volume.geometry.rotation_matrix[0]           [6]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [6]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [6]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [6]: [0.000000 0.000000 1.000000] \n",
      "---------------------------------------------------------------------\n",
      "number_of_volumes = 8\n",
      "number_of_masks = 2\n",
      "number_of_masked_volumes = 3\n",
      "\n",
      " ---- Overview of the lists generated for each volume ---- \n",
      "List overview for surrounding vacuum\n",
      "LIST: Children for Volume                  0 = [1,2,3,4,5,6,7]\n",
      "LIST: Direct_children for Volume           0 = [4,5,6,7]\n",
      "LIST: Intersect_check_list for Volume      0 = [1,2,4,7]\n",
      "LIST: Mask_intersect_list for Volume       0 = [3,5,6]\n",
      "LIST: Destinations_list for Volume         0 = []\n",
      "LIST: Reduced_destinations_list for Volume 0 = []\n",
      "LIST: Next_volume_list for Volume          0 = [3,5,6,1,2]\n",
      "LIST: mask_list for Volume                 0 = []\n",
      "LIST: masked_by_list for Volume            0 = []\n",
      "LIST: masked_by_mask_index_list for Volume 0 = []\n",
      "      mask_mode for Volume                 0 = 0\n",
      "\n",
      "List overview for wall with cylinder shape made of Al\n",
      "LIST: Children for Volume                  1 = []\n",
      "LIST: Direct_children for Volume           1 = []\n",
      "LIST: Intersect_check_list for Volume      1 = [2,4,7]\n",
      "LIST: Mask_intersect_list for Volume       1 = [3,6]\n",
      "LIST: Destinations_list for Volume         1 = [0,5]\n",
      "LIST: Reduced_destinations_list for Volume 1 = [5]\n",
      "LIST: Next_volume_list for Volume          1 = [0,5,3,6,2]\n",
      "      Is_vacuum for Volume                 1 = 0\n",
      "      is_mask_volume for Volume            1 = 0\n",
      "      is_masked_volume for Volume          1 = 0\n",
      "      is_exit_volume for Volume            1 = 0\n",
      "LIST: mask_list for Volume                 1 = []\n",
      "LIST: masked_by_list for Volume            1 = []\n",
      "LIST: masked_by_mask_index_list for Volume 1 = []\n",
      "      mask_mode for Volume                 1 = 0\n",
      "\n",
      "List overview for wall_vacuum with cylinder shape made of Vacuum\n",
      "LIST: Children for Volume                  2 = []\n",
      "LIST: Direct_children for Volume           2 = []\n",
      "LIST: Intersect_check_list for Volume      2 = [4,7]\n",
      "LIST: Mask_intersect_list for Volume       2 = []\n",
      "LIST: Destinations_list for Volume         2 = [0,1,3,5,6]\n",
      "LIST: Reduced_destinations_list for Volume 2 = [1,3,5,6]\n",
      "LIST: Next_volume_list for Volume          2 = [0,1,3,5,6]\n",
      "      Is_vacuum for Volume                 2 = 1\n",
      "      is_mask_volume for Volume            2 = 0\n",
      "      is_masked_volume for Volume          2 = 0\n",
      "      is_exit_volume for Volume            2 = 0\n",
      "LIST: mask_list for Volume                 2 = []\n",
      "LIST: masked_by_list for Volume            2 = []\n",
      "LIST: masked_by_mask_index_list for Volume 2 = []\n",
      "      mask_mode for Volume                 2 = 0\n",
      "\n",
      "List overview for window with cylinder shape made of Vacuum\n",
      "LIST: Children for Volume                  3 = [2]\n",
      "LIST: Direct_children for Volume           3 = [2]\n",
      "LIST: Intersect_check_list for Volume      3 = [2,4]\n",
      "LIST: Mask_intersect_list for Volume       3 = []\n",
      "LIST: Destinations_list for Volume         3 = [0,1]\n",
      "LIST: Reduced_destinations_list for Volume 3 = [1]\n",
      "LIST: Next_volume_list for Volume          3 = [0,1,2]\n",
      "      Is_vacuum for Volume                 3 = 1\n",
      "      is_mask_volume for Volume            3 = 0\n",
      "      is_masked_volume for Volume          3 = 1\n",
      "      is_exit_volume for Volume            3 = 0\n",
      "LIST: mask_list for Volume                 3 = []\n",
      "LIST: masked_by_list for Volume            3 = [4]\n",
      "LIST: masked_by_mask_index_list for Volume 3 = [0]\n",
      "      mask_mode for Volume                 3 = 1\n",
      "\n",
      "List overview for mask with box shape made of Mask\n",
      "LIST: Children for Volume                  4 = []\n",
      "LIST: Direct_children for Volume           4 = []\n",
      "LIST: Intersect_check_list for Volume      4 = []\n",
      "LIST: Mask_intersect_list for Volume       4 = []\n",
      "LIST: Destinations_list for Volume         4 = [0,1,2]\n",
      "LIST: Reduced_destinations_list for Volume 4 = [1,2]\n",
      "LIST: Next_volume_list for Volume          4 = [0,1,2]\n",
      "      Is_vacuum for Volume                 4 = 0\n",
      "      is_mask_volume for Volume            4 = 1\n",
      "      is_masked_volume for Volume          4 = 0\n",
      "      is_exit_volume for Volume            4 = 0\n",
      "LIST: mask_list for Volume                 4 = [3]\n",
      "LIST: masked_by_list for Volume            4 = []\n",
      "LIST: masked_by_mask_index_list for Volume 4 = []\n",
      "      mask_mode for Volume                 4 = 1\n",
      "\n",
      "List overview for outer_window with cylinder shape made of Vacuum\n",
      "LIST: Children for Volume                  5 = [1,2,3]\n",
      "LIST: Direct_children for Volume           5 = [1,3]\n",
      "LIST: Intersect_check_list for Volume      5 = [2,7]\n",
      "LIST: Mask_intersect_list for Volume       5 = [6]\n",
      "LIST: Destinations_list for Volume         5 = [0,1]\n",
      "LIST: Reduced_destinations_list for Volume 5 = [1]\n",
      "LIST: Next_volume_list for Volume          5 = [0,1,6,2]\n",
      "      Is_vacuum for Volume                 5 = 1\n",
      "      is_mask_volume for Volume            5 = 0\n",
      "      is_masked_volume for Volume          5 = 1\n",
      "      is_exit_volume for Volume            5 = 0\n",
      "LIST: mask_list for Volume                 5 = []\n",
      "LIST: masked_by_list for Volume            5 = [7]\n",
      "LIST: masked_by_mask_index_list for Volume 5 = [1]\n",
      "      mask_mode for Volume                 5 = 1\n",
      "\n",
      "List overview for outer_window_Al with cylinder shape made of Al\n",
      "LIST: Children for Volume                  6 = [2,3]\n",
      "LIST: Direct_children for Volume           6 = [3]\n",
      "LIST: Intersect_check_list for Volume      6 = [2,7]\n",
      "LIST: Mask_intersect_list for Volume       6 = []\n",
      "LIST: Destinations_list for Volume         6 = [0,1,5]\n",
      "LIST: Reduced_destinations_list for Volume 6 = [1,5]\n",
      "LIST: Next_volume_list for Volume          6 = [0,1,5,2]\n",
      "      Is_vacuum for Volume                 6 = 0\n",
      "      is_mask_volume for Volume            6 = 0\n",
      "      is_masked_volume for Volume          6 = 1\n",
      "      is_exit_volume for Volume            6 = 0\n",
      "LIST: mask_list for Volume                 6 = []\n",
      "LIST: masked_by_list for Volume            6 = [7]\n",
      "LIST: masked_by_mask_index_list for Volume 6 = [1]\n",
      "      mask_mode for Volume                 6 = 1\n",
      "\n",
      "List overview for mask_outer with box shape made of Mask\n",
      "LIST: Children for Volume                  7 = []\n",
      "LIST: Direct_children for Volume           7 = []\n",
      "LIST: Intersect_check_list for Volume      7 = []\n",
      "LIST: Mask_intersect_list for Volume       7 = []\n",
      "LIST: Destinations_list for Volume         7 = [0,1,2]\n",
      "LIST: Reduced_destinations_list for Volume 7 = [1,2]\n",
      "LIST: Next_volume_list for Volume          7 = [0,1,2]\n",
      "      Is_vacuum for Volume                 7 = 0\n",
      "      is_mask_volume for Volume            7 = 1\n",
      "      is_masked_volume for Volume          7 = 0\n",
      "      is_exit_volume for Volume            7 = 0\n",
      "LIST: mask_list for Volume                 7 = [5,6]\n",
      "LIST: masked_by_list for Volume            7 = []\n",
      "LIST: masked_by_mask_index_list for Volume 7 = []\n",
      "      mask_mode for Volume                 7 = 1\n",
      "\n",
      "Union_master component master initialized sucessfully\n",
      "Detector: logger_space_zx_I=1149.44 logger_space_zx_ERR=3.92972 logger_space_zx_N=95537 \"logger_zx.dat\"\n",
      "loading system configuration\n",
      "\n"
     ]
    }
   ],
   "source": [
    "data = instrument.backengine()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting data with name logger_space_zx\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plotter.make_sub_plot(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Masks are flexible\n",
    "Masks can be used to create many interesting shapes with few geometries. Below we create a octagon with rounded corners using just three geometries, two of these being masks. Using masks expands the space of possible geometries greatly, and in many cases can also be a performance advantage when they reduce the number of geometries needed to describe the desired geometry."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "tags": [
     "scroll-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO: Using directory: \"/Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/python_tutorial_data_17\"\n",
      "INFO: Regenerating c-file: python_tutorial.c\n",
      "CFLAGS= -I@MCCODE_LIB@/share/\n",
      "INFO: Recompiling: ./python_tutorial.out\n",
      "mccode-r.c:2837:3: warning: expression result unused [-Wunused-value]\n",
      "  *t0;\n",
      "  ^~~\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1604:105: warning: incompatible pointer types passing 'int (const struct saved_history_struct *, const struct saved_history_struct *)' to parameter of type 'int (* _Nonnull)(const void *, const void *)' [-Wincompatible-pointer-types]\n",
      "  qsort(total_history.saved_histories,total_history.used_elements,sizeof (struct saved_history_struct), Sample_compare_history_intensities);\n",
      "                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/stdlib.h:161:22: note: passing argument to parameter '__compar' here\n",
      "            int (* _Nonnull __compar)(const void *, const void *));\n",
      "                            ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1613:20: warning: incompatible pointer types passing 'struct saved_history_struct *' to parameter of type 'struct dynamic_history_list *' [-Wincompatible-pointer-types]\n",
      "    printf_history(&total_history.saved_histories[history_iterate]);\n",
      "                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:1434:50: note: passing argument to parameter 'history' here\n",
      "void printf_history(struct dynamic_history_list *history) {\n",
      "                                                 ^\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Incoherent_process.comp:65:\n",
      "In file included from /Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Union_functions.c:2030:\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:839:1: warning: non-void function does not return a value in all control paths [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:883:1: warning: non-void function does not return a value [-Wreturn-type]\n",
      "};\n",
      "^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3274:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3276:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3278:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: warning: if statement has empty body [-Wempty-body]\n",
      "    if (dist_to_corner > sphere_2_radius); { sphere_2_radius = dist_to_corner ; }\n",
      "                                         ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//share/Geometry_functions.c:3280:42: note: put the semicolon on a separate line to silence this warning\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: warning: format string is not a string literal (potentially insecure) [-Wformat-security]\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^~~~~~~~\n",
      "./python_tutorial.c:12065:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^~~~~~~~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_logger_2D_space.comp:574:45: note: treat the string as an argument to avoid this\n",
      "  sprintf(this_storage.Detector_2D.Filename,filename);\n",
      "                                            ^\n",
      "                                            \"%s\", \n",
      "./python_tutorial.c:12065:18: note: expanded from macro 'filename'\n",
      "#define filename mcclogger_space_zx_filename\n",
      "                 ^\n",
      "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'\n",
      "  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)\n",
      "                                                       ^\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:15: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "              ^~~~~~~~~~~~~~~~~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:788:90: warning: expression result unused [-Wunused-value]\n",
      "          if (volume_index_main,Volumes[volume_index_main]->geometry.is_mask_volume == 0 ||\n",
      "          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//contrib/union/Union_master.comp:789:92: warning: expression result unused [-Wunused-value]\n",
      "              volume_index_main,Volumes[volume_index_main]->geometry.is_masked_volume == 0 ||\n",
      "              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n",
      "mccode-r.h:219:27: note: expanded from macro 'MPI_MASTER'\n",
      "#define MPI_MASTER(instr) instr\n",
      "                          ^~~~~\n",
      "13 warnings generated.\n",
      "INFO: ===\n",
      "INFO: Placing instr file copy python_tutorial.instr in dataset /Users/madsbertelsen/PaNOSC/McStasScript/github/McStasScript/docs/source/tutorial/python_tutorial_data_17\n",
      "\n",
      "    Opening input file '/Applications/McStas-2.7.1.app/Contents/Resources/mcstas/2.7.1//data/Al.laz' (Table_Read_Offset)\n",
      "Table from file 'Al.laz' (block 1) is 26 x 18 (x=1:8), constant step. interpolation: linear\n",
      "  '# TITLE *Aluminum-Al-[FM3-M] Miller, H.P.jr.;DuMond, J.W.M.[1942] at 298 K; ...'\n",
      "PowderN: Al_pow: Reading 26 rows from Al.laz\n",
      "PowderN: Al_pow: Read 26 reflections from file 'Al.laz'\n",
      "PowderN: Al_pow: Vc=66.4 [Angs] sigma_abs=0.924 [barn] sigma_inc=0.0328 [barn] reflections=Al.laz\n",
      "---------------------------------------------------------------------\n",
      "global_process_list.num_elements: 2\n",
      "name of process [0]: Al_inc \n",
      "component index [0]: 1 \n",
      "name of process [1]: Al_pow \n",
      "component index [1]: 2 \n",
      "---------------------------------------------------------------------\n",
      "global_material_list.num_elements: 1\n",
      "name of material    [0]: Al \n",
      "component index     [0]: 3 \n",
      "my_absoprtion       [0]: 0.347892 \n",
      "number of processes [0]: 2 \n",
      "---------------------------------------------------------------------\n",
      "global_geometry_list.num_elements: 1\n",
      "\n",
      "name of geometry    [0]: box \n",
      "component index     [0]: 5 \n",
      "Volume.name         [0]: box \n",
      "Volume.p_physics.is_vacuum           [0]: 0 \n",
      "Volume.p_physics.my_absorption       [0]: 0.347892 \n",
      "Volume.p_physics.number of processes [0]: 2 \n",
      "Volume.geometry.shape                [0]: box \n",
      "Volume.geometry.center.x             [0]: 0.000000 \n",
      "Volume.geometry.center.y             [0]: 0.000000 \n",
      "Volume.geometry.center.z             [0]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [0]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [0]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [0]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [0]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [1]: box_mask \n",
      "component index     [1]: 6 \n",
      "Volume.name         [1]: box_mask \n",
      "Volume.geometry.shape                [1]: box \n",
      "Volume.geometry.center.x             [1]: 0.000000 \n",
      "Volume.geometry.center.y             [1]: 0.000000 \n",
      "Volume.geometry.center.z             [1]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [1]: [0.707107 0.000000 -0.707107] \n",
      "Volume.geometry.rotation_matrix[1]           [1]: [-0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [1]: [0.707107 -0.000000 0.707107] \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [1]: [0.000000 0.000000 1.000000] \n",
      "\n",
      "name of geometry    [2]: cylinder_mask \n",
      "component index     [2]: 7 \n",
      "Volume.name         [2]: cylinder_mask \n",
      "Volume.geometry.shape                [2]: cylinder \n",
      "Volume.geometry.center.x             [2]: 0.000000 \n",
      "Volume.geometry.center.y             [2]: 0.000000 \n",
      "Volume.geometry.center.z             [2]: 1.000000 \n",
      "Volume.geometry.rotation_matrix[0]           [2]: [1.000000 0.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[1]           [2]: [0.000000 1.000000 0.000000] \n",
      "Volume.geometry.rotation_matrix[2]           [2]: [0.000000 0.000000 1.000000] \n",
      "Volume.geometry.geometry_parameters.cyl_radius [2]: 0.105000 \n",
      "Volume.geometry.geometry_parameters.height [2]: 0.120000 \n",
      "Volume.geometry.focus_data_array.elements[0].Aim             [2]: [0.000000 0.000000 1.000000] \n",
      "---------------------------------------------------------------------\n",
      "number_of_volumes = 4\n",
      "number_of_masks = 2\n",
      "number_of_masked_volumes = 1\n",
      "\n",
      " ---- Overview of the lists generated for each volume ---- \n",
      "List overview for surrounding vacuum\n",
      "LIST: Children for Volume                  0 = [1,2,3]\n",
      "LIST: Direct_children for Volume           0 = [1,2,3]\n",
      "LIST: Intersect_check_list for Volume      0 = [2,3]\n",
      "LIST: Mask_intersect_list for Volume       0 = [1]\n",
      "LIST: Destinations_list for Volume         0 = []\n",
      "LIST: Reduced_destinations_list for Volume 0 = []\n",
      "LIST: Next_volume_list for Volume          0 = [1]\n",
      "LIST: mask_list for Volume                 0 = []\n",
      "LIST: masked_by_list for Volume            0 = []\n",
      "LIST: masked_by_mask_index_list for Volume 0 = []\n",
      "      mask_mode for Volume                 0 = 0\n",
      "\n",
      "List overview for box with box shape made of Al\n",
      "LIST: Children for Volume                  1 = []\n",
      "LIST: Direct_children for Volume           1 = []\n",
      "LIST: Intersect_check_list for Volume      1 = [2,3]\n",
      "LIST: Mask_intersect_list for Volume       1 = []\n",
      "LIST: Destinations_list for Volume         1 = [0]\n",
      "LIST: Reduced_destinations_list for Volume 1 = []\n",
      "LIST: Next_volume_list for Volume          1 = [0]\n",
      "      Is_vacuum for Volume                 1 = 0\n",
      "      is_mask_volume for Volume            1 = 0\n",
      "      is_masked_volume for Volume          1 = 1\n",
      "      is_exit_volume for Volume            1 = 0\n",
      "LIST: mask_list for Volume                 1 = []\n",
      "LIST: masked_by_list for Volume            1 = [2,3]\n",
      "LIST: masked_by_mask_index_list for Volume 1 = [0,1]\n",
      "      mask_mode for Volume                 1 = 1\n",
      "\n",
      "List overview for box_mask with box shape made of Mask\n",
      "LIST: Children for Volume                  2 = []\n",
      "LIST: Direct_children for Volume           2 = []\n",
      "LIST: Intersect_check_list for Volume      2 = []\n",
      "LIST: Mask_intersect_list for Volume       2 = []\n",
      "LIST: Destinations_list for Volume         2 = [0]\n",
      "LIST: Reduced_destinations_list for Volume 2 = []\n",
      "LIST: Next_volume_list for Volume          2 = [0]\n",
      "      Is_vacuum for Volume                 2 = 0\n",
      "      is_mask_volume for Volume            2 = 1\n",
      "      is_masked_volume for Volume          2 = 0\n",
      "      is_exit_volume for Volume            2 = 0\n",
      "LIST: mask_list for Volume                 2 = [1]\n",
      "LIST: masked_by_list for Volume            2 = []\n",
      "LIST: masked_by_mask_index_list for Volume 2 = []\n",
      "      mask_mode for Volume                 2 = 1\n",
      "\n",
      "List overview for cylinder_mask with cylinder shape made of Mask\n",
      "LIST: Children for Volume                  3 = []\n",
      "LIST: Direct_children for Volume           3 = []\n",
      "LIST: Intersect_check_list for Volume      3 = []\n",
      "LIST: Mask_intersect_list for Volume       3 = []\n",
      "LIST: Destinations_list for Volume         3 = [0]\n",
      "LIST: Reduced_destinations_list for Volume 3 = []\n",
      "LIST: Next_volume_list for Volume          3 = [0]\n",
      "      Is_vacuum for Volume                 3 = 0\n",
      "      is_mask_volume for Volume            3 = 1\n",
      "      is_masked_volume for Volume          3 = 0\n",
      "      is_exit_volume for Volume            3 = 0\n",
      "LIST: mask_list for Volume                 3 = [1]\n",
      "LIST: masked_by_list for Volume            3 = []\n",
      "LIST: masked_by_mask_index_list for Volume 3 = []\n",
      "      mask_mode for Volume                 3 = 1\n",
      "\n",
      "Union_master component master initialized sucessfully\n",
      "Detector: logger_space_zx_I=3973.85 logger_space_zx_ERR=10.331 logger_space_zx_N=158346 \"logger_zx.dat\"\n",
      "loading system configuration\n",
      "\n"
     ]
    }
   ],
   "source": [
    "instrument = instr.McStas_instr(\"python_tutorial\", input_path=\"run_folder\")\n",
    "\n",
    "Al_inc = instrument.add_component(\"Al_inc\", \"Incoherent_process\")\n",
    "Al_inc.sigma = 0.0082\n",
    "Al_inc.unit_cell_volume = 66.4\n",
    "\n",
    "Al_pow = instrument.add_component(\"Al_pow\", \"Powder_process\")\n",
    "Al_pow.reflections = '\"Al.laz\"'\n",
    "\n",
    "Al = instrument.add_component(\"Al\", \"Union_make_material\")\n",
    "Al.process_string = '\"Al_inc,Al_pow\"'\n",
    "Al.my_absorption = 100*0.231/66.4 # barns [m^2 E-28]*Ã…^3 [m^3 E-30]=[m E-2], factor 100\n",
    "\n",
    "src = instrument.add_component(\"source\", \"Source_div\")\n",
    "\n",
    "src.xwidth = 0.2\n",
    "src.yheight = 0.035\n",
    "src.focus_aw = 0.01\n",
    "src.focus_ah = 0.01\n",
    "\n",
    "instrument.add_parameter(\"wavelength\", value=5.0, comment=\"Wavelength in [Ang]\")\n",
    "src.lambda0=\"wavelength\"\n",
    "src.dlambda=\"0.01*wavelength\"\n",
    "src.flux = 1E13\n",
    "\n",
    "box = instrument.add_component(\"box\", \"Union_box\")\n",
    "box.set_AT([0,0,1], RELATIVE=src)\n",
    "box.xwidth = 0.2\n",
    "box.yheight = 0.1\n",
    "box.zdepth = 0.2\n",
    "box.material_string='\"Al\"' \n",
    "box.priority = 10\n",
    "\n",
    "# Cut the corners by using an identical box rotated 45 deg around y\n",
    "box_mask = instrument.add_component(\"box_mask\", \"Union_box\")\n",
    "box_mask.set_AT([0,0,0], RELATIVE=box)\n",
    "box_mask.set_ROTATED([0,45,0], RELATIVE=box)\n",
    "box_mask.xwidth = 0.2\n",
    "box_mask.yheight = 0.11 # Have to increase yheight to avoid perfect overlap\n",
    "box_mask.zdepth = 0.2\n",
    "box_mask.mask_string='\"box\"' \n",
    "box_mask.priority = 50\n",
    "\n",
    "# Round the corners with a cylinder mask\n",
    "cyl_mask = instrument.add_component(\"cylinder_mask\", \"Union_cylinder\")\n",
    "cyl_mask.set_AT([0,0,0], RELATIVE=box)\n",
    "cyl_mask.radius = 0.105\n",
    "cyl_mask.yheight = 0.12\n",
    "cyl_mask.mask_string='\"box\"' \n",
    "cyl_mask.priority = 51\n",
    "\n",
    "logger_zx = instrument.add_component(\"logger_space_zx\", \"Union_logger_2D_space\")\n",
    "logger_zx.set_RELATIVE(box)\n",
    "logger_zx.D_direction_1 = '\"z\"'\n",
    "logger_zx.D1_min = -0.12\n",
    "logger_zx.D1_max = 0.12\n",
    "logger_zx.n1 = 300\n",
    "logger_zx.D_direction_2 = '\"x\"'\n",
    "logger_zx.D2_min = -0.12\n",
    "logger_zx.D2_max = 0.12\n",
    "logger_zx.n2 = 300\n",
    "logger_zx.filename = '\"logger_zx.dat\"'\n",
    "\n",
    "master = instrument.add_component(\"master\", \"Union_master\")\n",
    "\n",
    "\n",
    "data = instrument.backengine()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting data with name logger_space_zx\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plotter.make_sub_plot(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "celltoolbar": "Tags",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
